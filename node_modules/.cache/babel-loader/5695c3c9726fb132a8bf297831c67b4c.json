{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/temp/mp2/src/components/pokecalls/PokeCalls.js\";\nimport PokeGrid from \"./../pokegrid/PokeGrid\";\nimport Pages from \"./../pages/Pages\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./../loading/Loading\";\nimport ErrorMessage from \"./../errorMessage/ErrorMessage\";\nimport { withRouter } from \"react-router\";\nimport \"./PokeCalls.css\";\n\nclass PokeCalls extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (this.props.filterList !== prevProps.filterList) {\n        this.handleFilterList();\n      }\n\n      if (this.state.startNum !== prevState.startNum) {\n        this.fetchPokemon();\n      }\n\n      if (this.state.sliceNum !== prevState.sliceNum) {\n        this.fetchPokemon();\n      }\n    };\n\n    this.handleFilterList = async () => {\n      let regexPat = /\\/pokemon\\/(\\d+)\\//;\n      let endNum;\n      let startNum;\n      let currentUrlParams = new URLSearchParams(window.location.search);\n      let currentPageNum = currentUrlParams.get(\"page\");\n      currentPageNum = parseInt(currentPageNum);\n      let pokeList = [];\n      const {\n        filterList\n      } = this.props;\n      this.setState({\n        sorted: false,\n        newPokemonList: []\n      });\n\n      if (this.props.filterList.length < 1) {\n        this.fetchPokemon();\n      }\n\n      if (!currentPageNum) {\n        endNum = 31;\n        startNum = 0;\n      } else {\n        endNum = currentPageNum * 31;\n        startNum = endNum - 31;\n      } //Gathers filter data from pokeapi\n\n\n      let filterPromises = filterList.map(filter => axios.get(`https://pokeapi.co/api/v2/type/${filter}/`));\n      await Promise.all(filterPromises).then(all => {\n        const data = all.map(result => result.data.pokemon);\n        data.forEach(poke => poke.map(pokemon => pokeList.push(pokemon.pokemon)));\n      }); //Adds a id object to the pokemon object for getting images\n\n      pokeList.map(poke => {\n        let id = poke.url.match(regexPat)[1];\n        return poke[\"id\"] = id;\n      }); //Slice pokeList to handle pagination\n\n      let cutPokemon = pokeList.slice(startNum, endNum);\n      this.setState({\n        newPokemonList: cutPokemon,\n        sorted: true\n      });\n    };\n\n    this.handlePagesClick = direction => {\n      this.setState({\n        sorted: false\n      });\n      let currentUrlParams = new URLSearchParams(window.location.search);\n      let currentPageNum = currentUrlParams.get(\"page\");\n      currentPageNum = parseInt(currentPageNum);\n\n      if (!currentPageNum) {\n        currentPageNum = 1;\n      }\n\n      if (direction === \"next\") {\n        currentPageNum = currentPageNum + 1;\n      } else if (direction === \"prev\" && currentPageNum !== 1) {\n        currentPageNum = currentPageNum - 1;\n      } else {\n        currentPageNum = 1;\n      }\n\n      currentUrlParams.set(\"page\", currentPageNum);\n      this.props.history.push(`?page=${currentPageNum}`); //If filterList array is empty fetch pokemon normally else fetch the typed pokemon with handlefilterlist\n\n      if (this.props.filterList.length < 1) {\n        this.fetchPokemon();\n      } else {\n        this.handleFilterList();\n      }\n    };\n\n    this.fetchPokemon = async () => {\n      let offsetNum = 0;\n      let regexPat = /\\/pokemon\\/(\\d+)\\//;\n      let currentUrlParams = new URLSearchParams(window.location.search);\n      let currentPageNum = currentUrlParams.get(\"page\");\n\n      if (currentPageNum > 26) {\n        this.props.history.push(\"/404\");\n      }\n\n      if (!currentPageNum) {\n        offsetNum = 0;\n      } else {\n        offsetNum = currentPageNum * 30 - 30;\n      }\n\n      this.setState({\n        sorted: false,\n        pokemonList: []\n      }); //Fetches pokemon\n\n      const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=30&offset=${offsetNum}`);\n      let pokemon = res.data.results;\n      pokemon.map(pokemon => {\n        let id = pokemon.url.match(regexPat)[1];\n        return pokemon[\"id\"] = id; //Adds id to pokemon object\n      });\n      this.setState({\n        pokemonList: pokemon,\n        sorted: true\n      });\n    };\n\n    this.state = {\n      pokemon: [],\n      pokemonList: [],\n      loading: false,\n      sorted: false,\n      sliceNum: 0,\n      error: null,\n      newPokemonList: [],\n      pokeFilter: [],\n      sliceEndNum: 50,\n      pageNum: 1\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPokemon();\n  }\n\n  render() {\n    const {\n      newPokemonList,\n      pokemonList,\n      sorted,\n      error\n    } = this.state;\n\n    if (!sorted) {\n      return React.createElement(\"div\", {\n        className: \"loadingContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    }\n\n    if (error) {\n      return React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ErrorMessage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    }\n\n    if (newPokemonList.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(PokeGrid, {\n        pokemonList: newPokemonList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Pages, {\n        handlePagesClick: this.handlePagesClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(PokeGrid, {\n      pokemonList: pokemonList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Pages, {\n      handlePagesClick: this.handlePagesClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(PokeCalls);","map":{"version":3,"sources":["/Users/yeqinghan/temp/mp2/src/components/pokecalls/PokeCalls.js"],"names":["PokeGrid","Pages","React","Component","axios","Loading","ErrorMessage","withRouter","PokeCalls","constructor","props","componentDidUpdate","prevProps","prevState","filterList","handleFilterList","state","startNum","fetchPokemon","sliceNum","regexPat","endNum","currentUrlParams","URLSearchParams","window","location","search","currentPageNum","get","parseInt","pokeList","setState","sorted","newPokemonList","length","filterPromises","map","filter","Promise","all","then","data","result","pokemon","forEach","poke","push","id","url","match","cutPokemon","slice","handlePagesClick","direction","set","history","offsetNum","pokemonList","res","results","loading","error","pokeFilter","sliceEndNum","pageNum","componentDidMount","render"],"mappings":"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","sourcesContent":["import PokeGrid from \"./../pokegrid/PokeGrid\";\nimport Pages from \"./../pages/Pages\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./../loading/Loading\";\nimport ErrorMessage from \"./../errorMessage/ErrorMessage\";\nimport { withRouter } from \"react-router\";\nimport \"./PokeCalls.css\";\n\nclass PokeCalls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: [],\n      pokemonList: [],\n      loading: false,\n      sorted: false,\n      sliceNum: 0,\n      error: null,\n      newPokemonList: [],\n      pokeFilter: [],\n      sliceEndNum: 50,\n      pageNum: 1\n    };\n  }\n  componentDidMount() {\n    this.fetchPokemon();\n  }\n  componentDidUpdate = (prevProps, prevState) => {\n    if (this.props.filterList !== prevProps.filterList) {\n      this.handleFilterList();\n    }\n    if (this.state.startNum !== prevState.startNum) {\n      this.fetchPokemon();\n    }\n    if (this.state.sliceNum !== prevState.sliceNum) {\n      this.fetchPokemon();\n    }\n  };\n  handleFilterList = async () => {\n    let regexPat = /\\/pokemon\\/(\\d+)\\//;\n    let endNum;\n    let startNum;\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n    currentPageNum = parseInt(currentPageNum);\n    let pokeList = [];\n    const { filterList } = this.props;\n    this.setState({\n      sorted: false,\n      newPokemonList: []\n    });\n\n    if (this.props.filterList.length < 1) {\n      this.fetchPokemon();\n    }\n    if (!currentPageNum) {\n      endNum = 31;\n      startNum = 0;\n    } else {\n      endNum = currentPageNum * 31;\n      startNum = endNum - 31;\n    }\n    //Gathers filter data from pokeapi\n    let filterPromises = filterList.map(filter =>\n      axios.get(`https://pokeapi.co/api/v2/type/${filter}/`)\n    );\n    await Promise.all(filterPromises).then(all => {\n      const data = all.map(result => result.data.pokemon);\n      data.forEach(poke => poke.map(pokemon => pokeList.push(pokemon.pokemon)));\n    });\n    //Adds a id object to the pokemon object for getting images\n    pokeList.map(poke => {\n      let id = poke.url.match(regexPat)[1];\n      return (poke[\"id\"] = id);\n    });\n    //Slice pokeList to handle pagination\n    let cutPokemon = pokeList.slice(startNum, endNum);\n    this.setState({ newPokemonList: cutPokemon, sorted: true });\n  };\n\n  handlePagesClick = direction => {\n    this.setState({ sorted: false });\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n    currentPageNum = parseInt(currentPageNum);\n\n    if (!currentPageNum) {\n      currentPageNum = 1;\n    }\n    if (direction === \"next\") {\n      currentPageNum = currentPageNum + 1;\n    } else if (direction === \"prev\" && currentPageNum !== 1) {\n      currentPageNum = currentPageNum - 1;\n    } else {\n      currentPageNum = 1;\n    }\n    currentUrlParams.set(\"page\", currentPageNum);\n    this.props.history.push(`?page=${currentPageNum}`);\n    //If filterList array is empty fetch pokemon normally else fetch the typed pokemon with handlefilterlist\n    if (this.props.filterList.length < 1) {\n      this.fetchPokemon();\n    } else {\n      this.handleFilterList();\n    }\n  };\n\n  fetchPokemon = async () => {\n    let offsetNum = 0;\n    let regexPat = /\\/pokemon\\/(\\d+)\\//;\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n    if (currentPageNum > 26) {\n      this.props.history.push(\"/404\");\n    }\n    if (!currentPageNum) {\n      offsetNum = 0;\n    } else {\n      offsetNum = currentPageNum * 30 - 30;\n    }\n    this.setState({ sorted: false, pokemonList: [] });\n    //Fetches pokemon\n    const res = await axios.get(\n      `https://pokeapi.co/api/v2/pokemon/?limit=30&offset=${offsetNum}`\n    );\n    let pokemon = res.data.results;\n    pokemon.map(pokemon => {\n      let id = pokemon.url.match(regexPat)[1];\n      return (pokemon[\"id\"] = id);\n      //Adds id to pokemon object\n    });\n    this.setState({ pokemonList: pokemon, sorted: true });\n  };\n\n  render() {\n    const { newPokemonList, pokemonList, sorted, error } = this.state;\n\n    if (!sorted) {\n      return (\n        <div className=\"loadingContainer\">\n          <Loading />\n        </div>\n      );\n    }\n    if (error) {\n      return (\n        <div className=\"error\">\n          <ErrorMessage />\n        </div>\n      );\n    }\n    if (newPokemonList.length > 0) {\n      return (\n        <div>\n          <PokeGrid pokemonList={newPokemonList} />\n          <Pages handlePagesClick={this.handlePagesClick} />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <PokeGrid pokemonList={pokemonList} />\n        <Pages handlePagesClick={this.handlePagesClick} />\n      </div>\n    );\n  }\n}\nexport default withRouter(PokeCalls);\n"]},"metadata":{},"sourceType":"module"}