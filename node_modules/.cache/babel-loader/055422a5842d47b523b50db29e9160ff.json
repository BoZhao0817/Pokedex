{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/temp/mp2/src/Components/FilterResult/FilterResult.js\";\nimport CardList from \"../Card/CardList\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport { getAllPokemon, getPokemon } from \"../../Services/pokemon\";\n\nconst FilterResult = () => {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextpageUrl, setNextPageurl] = useState('');\n  const [prevpageUrl, setPrevPageurl] = useState(''); //set data state when use api\n\n  const [loading, setLoading] = useState(true); // string\n\n  const currentUrl = 'https://pokeapi.co/api/v2/pokemon'; //Gathers filter data from pokeapi\n\n  const filterPromises = filterList.map(filter => axios.get(`https://pokeapi.co/api/v2/type/${filter}/`)); //one function, one array\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(currentUrl);\n      console.log(response); //response is the data get from api, it has previous and next to the other page\n\n      setNextPageurl(response.next);\n      setPrevPageurl(response.previous); //passing the results array\n\n      let pokemon = await loadingPokemon(response.results); //get data back from Api\n\n      setLoading(false);\n    } //recreate the function\n\n\n    fetchData();\n  }, []);\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextpageUrl);\n    await loadingPokemon(data.results);\n    setNextPageurl(data.next);\n    setPrevPageurl(data.previous);\n    setLoading(false);\n  };\n\n  const prev = async () => {\n    if (!prevpageUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevpageUrl);\n    await loadingPokemon(data.results);\n    setNextPageurl(data.next);\n    setPrevPageurl(data.previous);\n    setLoading(false);\n  };\n\n  const loadingPokemon = async data => {\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Outer-Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: prev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Prev\"), React.createElement(\"button\", {\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Next\")), React.createElement(\"div\", {\n    className: \"card-grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, pokemonData.map((pokemon, i) => {\n    return React.createElement(Card, {\n      key: i,\n      pokemon: pokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: prev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Prev\"), React.createElement(\"button\", {\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default withRouter(FilterResult);","map":{"version":3,"sources":["/Users/yeqinghan/temp/mp2/src/Components/FilterResult/FilterResult.js"],"names":["CardList","axios","withRouter","React","Component","useEffect","useState","Card","getAllPokemon","getPokemon","FilterResult","pokemonData","setPokemonData","nextpageUrl","setNextPageurl","prevpageUrl","setPrevPageurl","loading","setLoading","currentUrl","filterPromises","filterList","map","filter","get","fetchData","response","console","log","next","previous","pokemon","loadingPokemon","results","data","prev","_pokemonData","Promise","all","pokemonRecord","url","i"],"mappings":"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","sourcesContent":["import CardList from \"../Card/CardList\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport React, {Component, useEffect, useState} from \"react\";\nimport Card from \"./Card\";\nimport {getAllPokemon, getPokemon} from \"../../Services/pokemon\";\n\n\nconst FilterResult = () => {\n    const [pokemonData, setPokemonData] = useState([]);\n    const [nextpageUrl, setNextPageurl] = useState('');\n    const [prevpageUrl, setPrevPageurl] = useState('');\n    //set data state when use api\n    const [loading, setLoading] = useState(true);\n    // string\n    const currentUrl = 'https://pokeapi.co/api/v2/pokemon'\n    //Gathers filter data from pokeapi\n    const filterPromises = filterList.map(filter =>\n        axios.get(`https://pokeapi.co/api/v2/type/${filter}/`)\n    );\n\n    //one function, one array\n    useEffect(() =>{\n        async function fetchData(){\n            let response = await getAllPokemon(currentUrl);\n            console.log(response)\n            //response is the data get from api, it has previous and next to the other page\n            setNextPageurl(response.next);\n            setPrevPageurl(response.previous);\n            //passing the results array\n            let pokemon = await loadingPokemon(response.results);\n            //get data back from Api\n            setLoading(false);\n        }\n        //recreate the function\n        fetchData();\n\n    },[]);\n\n    const next = async () => {\n        setLoading(true);\n        let data = await getAllPokemon(nextpageUrl);\n        await loadingPokemon(data.results);\n        setNextPageurl(data.next);\n        setPrevPageurl(data.previous);\n        setLoading(false);\n    }\n\n    const prev = async () => {\n        if (!prevpageUrl) return;\n        setLoading(true);\n        let data = await getAllPokemon(prevpageUrl);\n        await loadingPokemon(data.results);\n        setNextPageurl(data.next);\n        setPrevPageurl(data.previous);\n        setLoading(false);\n    }\n\n\n    const loadingPokemon = async (data) => {\n        let _pokemonData = await Promise.all(data.map(async pokemon => {\n            let pokemonRecord = await getPokemon(pokemon.url);\n            return pokemonRecord\n        }))\n        setPokemonData(_pokemonData)\n    }\n    return(\n        <div className=\"Outer-Container\">\n            <div className=\"btn\">\n                <button onClick={prev}>Prev</button>\n                <button onClick={next}>Next</button>\n            </div>\n            <div className=\"card-grid-container\">\n                {pokemonData.map((pokemon, i) => {\n                    return <Card key ={i} pokemon = {pokemon}/>\n                })\n                }\n            </div>\n            <div className=\"btn\">\n                <button onClick={prev}>Prev</button>\n                <button onClick={next}>Next</button>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(FilterResult);\n"]},"metadata":{},"sourceType":"module"}