{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/temp/mp2/src/components/generations/Generations.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport Loading from \"../loading/Loading\";\nimport PokeGrid from \"../pokegrid/PokeGrid\";\nimport Pages from \"../pages/Pages\";\n\nconst Generations = props => {\n  const [data, setData] = useState();\n  const [genPokemonList, setGenPokemonList] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [arrayLength, setarrayLength] = useState(0);\n  const generationId = props.match.params.num;\n  useEffect(() => {\n    fetchGenerationData();\n  }, []);\n  useEffect(() => {\n    fetchGenerationData();\n  }, [generationId]);\n\n  const fetchGenerationData = async () => {\n    setLoaded(false);\n    const res = await axios.get(`https://pokeapi.co/api/v2/generation/${generationId}`);\n    let pokeData = res.data.pokemon_species;\n    setarrayLength(pokeData.length);\n    const sortedPokemon = pokeData.sort(sortPokemons);\n    setGenPokemonList(sortedPokemon);\n    FetchGenPokemon(sortedPokemon);\n  };\n\n  const sortPokemons = (a, b) => {\n    let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n    let Aid = a.url.match(regexPat)[1];\n    let Bid = b.url.match(regexPat)[1];\n    return Aid - Bid;\n  }; // const sortPokemonsDesc = (a, b) => {\n  //   let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n  //   let Aid = a.url.match(regexPat)[1];\n  //   let Bid = b.url.match(regexPat)[1];\n  //   return Bid - Aid;\n  // };\n\n\n  const FetchGenPokemon = async pokemon => {\n    let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n    let endNum;\n    let startNum;\n    let cutPokemon;\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n\n    if (currentPageNum > 6) {\n      props.history.push(\"/404\");\n    }\n\n    if (!currentPageNum) {\n      endNum = 31;\n      startNum = 0;\n    } else {\n      endNum = currentPageNum * 31;\n      startNum = endNum - 31;\n    }\n\n    if (pokemon) {\n      cutPokemon = pokemon.slice(startNum, endNum);\n    } else {\n      cutPokemon = genPokemonList.slice(startNum, endNum);\n    }\n\n    cutPokemon.map(pokemon => {\n      let id = pokemon.url.match(regexPat)[1];\n      return pokemon[\"id\"] = id;\n    });\n    setData(cutPokemon);\n    setLoaded(true);\n  };\n\n  const handlePageClick = direction => {\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n    let stopNum = currentPageNum * 31;\n    currentPageNum = parseInt(currentPageNum);\n\n    if (!currentPageNum || stopNum > arrayLength && direction === \"next\") {\n      currentPageNum = 1;\n    }\n\n    if (direction === \"next\" && stopNum < arrayLength) {\n      currentPageNum = currentPageNum + 1;\n    } else if (direction === \"prev\" && currentPageNum !== 1) {\n      currentPageNum = currentPageNum - 1;\n    } else {\n      currentPageNum = 1;\n    }\n\n    currentUrlParams.set(\"page\", currentPageNum);\n    props.history.push(`?page=${currentPageNum}`);\n    setLoaded(false);\n    FetchGenPokemon();\n  };\n\n  if (!loaded) {\n    return React.createElement(\"div\", {\n      className: \"loadingContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" \", React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(PokeGrid, {\n    pokemonList: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Pages, {\n    handlePagesClick: handlePageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(Generations);","map":{"version":3,"sources":["/Users/yeqinghan/temp/mp2/src/components/generations/Generations.js"],"names":["React","useState","useEffect","Fragment","axios","withRouter","Loading","PokeGrid","Pages","Generations","props","data","setData","genPokemonList","setGenPokemonList","loaded","setLoaded","arrayLength","setarrayLength","generationId","match","params","num","fetchGenerationData","res","get","pokeData","pokemon_species","length","sortedPokemon","sort","sortPokemons","FetchGenPokemon","a","b","regexPat","Aid","url","Bid","pokemon","endNum","startNum","cutPokemon","currentUrlParams","URLSearchParams","window","location","search","currentPageNum","history","push","slice","map","id","handlePageClick","direction","stopNum","parseInt","set"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport Loading from \"../loading/Loading\";\nimport PokeGrid from \"../pokegrid/PokeGrid\";\nimport Pages from \"../pages/Pages\";\n\nconst Generations = props => {\n  const [data, setData] = useState();\n  const [genPokemonList, setGenPokemonList] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [arrayLength, setarrayLength] = useState(0);\n\n  const generationId = props.match.params.num;\n  useEffect(() => {\n    fetchGenerationData();\n  }, []);\n  useEffect(() => {\n    fetchGenerationData();\n  }, [generationId]);\n  const fetchGenerationData = async () => {\n    setLoaded(false);\n    const res = await axios.get(\n      `https://pokeapi.co/api/v2/generation/${generationId}`\n    );\n    let pokeData = res.data.pokemon_species;\n    setarrayLength(pokeData.length);\n    const sortedPokemon = pokeData.sort(sortPokemons);\n    setGenPokemonList(sortedPokemon);\n    FetchGenPokemon(sortedPokemon);\n  };\n\n  const sortPokemons = (a, b) => {\n    let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n    let Aid = a.url.match(regexPat)[1];\n    let Bid = b.url.match(regexPat)[1];\n    return Aid - Bid;\n  };\n\n  // const sortPokemonsDesc = (a, b) => {\n  //   let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n  //   let Aid = a.url.match(regexPat)[1];\n  //   let Bid = b.url.match(regexPat)[1];\n  //   return Bid - Aid;\n  // };\n\n  const FetchGenPokemon = async pokemon => {\n    let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n    let endNum;\n    let startNum;\n    let cutPokemon;\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n    if (currentPageNum > 6) {\n      props.history.push(\"/404\");\n    }\n    if (!currentPageNum) {\n      endNum = 31;\n      startNum = 0;\n    } else {\n      endNum = currentPageNum * 31;\n      startNum = endNum - 31;\n    }\n    if (pokemon) {\n      cutPokemon = pokemon.slice(startNum, endNum);\n    } else {\n      cutPokemon = genPokemonList.slice(startNum, endNum);\n    }\n    cutPokemon.map(pokemon => {\n      let id = pokemon.url.match(regexPat)[1];\n      return (pokemon[\"id\"] = id);\n    });\n\n    setData(cutPokemon);\n    setLoaded(true);\n  };\n  const handlePageClick = direction => {\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n    let stopNum = currentPageNum * 31;\n    currentPageNum = parseInt(currentPageNum);\n    if (!currentPageNum || (stopNum > arrayLength && direction === \"next\")) {\n      currentPageNum = 1;\n    }\n    if (direction === \"next\" && stopNum < arrayLength) {\n      currentPageNum = currentPageNum + 1;\n    } else if (direction === \"prev\" && currentPageNum !== 1) {\n      currentPageNum = currentPageNum - 1;\n    } else {\n      currentPageNum = 1;\n    }\n    currentUrlParams.set(\"page\", currentPageNum);\n    props.history.push(`?page=${currentPageNum}`);\n    setLoaded(false);\n    FetchGenPokemon();\n  };\n  if (!loaded) {\n    return (\n      <div className=\"loadingContainer\">\n        {\" \"}\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      <PokeGrid pokemonList={data} />\n      <Pages handlePagesClick={handlePageClick} />\n    </Fragment>\n  );\n};\n\nexport default withRouter(Generations);\n"]},"metadata":{},"sourceType":"module"}