{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/temp/mp2/src/components/searchBar/Search.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport Loading from \"../loading/Loading\";\nimport PokeGrid from \"../pokegrid/PokeGrid\";\nimport Pages from \"../pages/Pages\";\n\nconst Search = props => {\n  const [data, setData] = useState();\n  const [SearchPokemonList, setSearchPokemonList] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const [arrayLength, setarrayLength] = useState(0); //const pokemonId = props.match.params.num;\n\n  const pokeName = props.match.params.name;\n  useEffect(() => {\n    fetchSearchData();\n  }, []);\n  useEffect(() => {\n    fetchSearchData();\n  }, [pokeName]);\n\n  const fetchSearchData = async () => {\n    setLoaded(false);\n    const res = await axios.get(`https://pokeapi.co/api/v2/${pokeName}`);\n    let pokeData = res.data.pokemon_species;\n    setarrayLength(pokeData.length);\n    const sortedPokemon = pokeData.sort(sortPokemons);\n    setSearchPokemonList(sortedPokemon);\n    FetchSearchPokemon(sortedPokemon);\n  };\n\n  const sortPokemons = (a, b) => {\n    let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n    let Aid = a.url.match(regexPat)[1];\n    let Bid = b.url.match(regexPat)[1];\n    return Aid - Bid;\n  };\n\n  const FetchSearchPokemon = async pokemon => {\n    let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n    let endNum;\n    let startNum;\n    let cutPokemon;\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n\n    if (currentPageNum > 6) {\n      props.history.push(\"/404\");\n    }\n\n    if (!currentPageNum) {\n      endNum = 31;\n      startNum = 0;\n    } else {\n      endNum = currentPageNum * 31;\n      startNum = endNum - 31;\n    }\n\n    if (pokemon) {\n      cutPokemon = pokemon.slice(startNum, endNum);\n    } else {\n      cutPokemon = SearchPokemonList.slice(startNum, endNum);\n    }\n\n    cutPokemon.map(pokemon => {\n      let id = pokemon.url.match(regexPat)[1];\n      return pokemon[\"id\"] = id;\n    });\n    setData(cutPokemon);\n    setLoaded(true);\n  };\n\n  const handlePageClick = direction => {\n    let currentUrlParams = new URLSearchParams(window.location.search);\n    let currentPageNum = currentUrlParams.get(\"page\");\n    let stopNum = currentPageNum * 31;\n    currentPageNum = parseInt(currentPageNum);\n\n    if (!currentPageNum || stopNum > arrayLength && direction === \"next\") {\n      currentPageNum = 1;\n    }\n\n    if (direction === \"next\" && stopNum < arrayLength) {\n      currentPageNum = currentPageNum + 1;\n    } else if (direction === \"prev\" && currentPageNum !== 1) {\n      currentPageNum = currentPageNum - 1;\n    } else {\n      currentPageNum = 1;\n    }\n\n    currentUrlParams.set(\"page\", currentPageNum);\n    props.history.push(`?page=${currentPageNum}`);\n    setLoaded(false);\n    FetchSearchPokemon();\n  };\n\n  if (!loaded) {\n    return React.createElement(\"div\", {\n      className: \"loadingContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" \", React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(PokeGrid, {\n    pokemonList: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Pages, {\n    handlePagesClick: handlePageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(Search);","map":{"version":3,"sources":["/Users/yeqinghan/temp/mp2/src/components/searchBar/Search.js"],"names":["React","useState","useEffect","Fragment","axios","withRouter","Loading","PokeGrid","Pages","Search","props","data","setData","SearchPokemonList","setSearchPokemonList","loaded","setLoaded","arrayLength","setarrayLength","pokeName","match","params","name","fetchSearchData","res","get","pokeData","pokemon_species","length","sortedPokemon","sort","sortPokemons","FetchSearchPokemon","a","b","regexPat","Aid","url","Bid","pokemon","endNum","startNum","cutPokemon","currentUrlParams","URLSearchParams","window","location","search","currentPageNum","history","push","slice","map","id","handlePageClick","direction","stopNum","parseInt","set"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport Loading from \"../loading/Loading\";\nimport PokeGrid from \"../pokegrid/PokeGrid\";\nimport Pages from \"../pages/Pages\";\n\nconst Search = props => {\n    const [data, setData] = useState();\n    const [SearchPokemonList, setSearchPokemonList] = useState();\n    const [loaded, setLoaded] = useState(false);\n    const [arrayLength, setarrayLength] = useState(0);\n    //const pokemonId = props.match.params.num;\n    const pokeName = props.match.params.name;\n    useEffect(() => {\n        fetchSearchData();\n    }, []);\n    useEffect(() => {\n        fetchSearchData();\n    }, [pokeName]);\n    const fetchSearchData = async () => {\n        setLoaded(false);\n        const res = await axios.get(\n            `https://pokeapi.co/api/v2/${pokeName}`\n        );\n        let pokeData = res.data.pokemon_species;\n        setarrayLength(pokeData.length);\n        const sortedPokemon = pokeData.sort(sortPokemons);\n        setSearchPokemonList(sortedPokemon);\n        FetchSearchPokemon(sortedPokemon);\n    };\n    const sortPokemons = (a, b) => {\n        let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n        let Aid = a.url.match(regexPat)[1];\n        let Bid = b.url.match(regexPat)[1];\n        return Aid - Bid;\n    };\n    const FetchSearchPokemon = async pokemon => {\n        let regexPat = /\\/pokemon-species\\/(\\d+)\\//;\n        let endNum;\n        let startNum;\n        let cutPokemon;\n        let currentUrlParams = new URLSearchParams(window.location.search);\n        let currentPageNum = currentUrlParams.get(\"page\");\n        if (currentPageNum > 6) {\n            props.history.push(\"/404\");\n        }\n        if (!currentPageNum) {\n            endNum = 31;\n            startNum = 0;\n        } else {\n            endNum = currentPageNum * 31;\n            startNum = endNum - 31;\n        }\n        if (pokemon) {\n            cutPokemon = pokemon.slice(startNum, endNum);\n        } else {\n            cutPokemon = SearchPokemonList.slice(startNum, endNum);\n        }\n        cutPokemon.map(pokemon => {\n            let id = pokemon.url.match(regexPat)[1];\n            return (pokemon[\"id\"] = id);\n        });\n\n        setData(cutPokemon);\n        setLoaded(true);\n    };\n    const handlePageClick = direction => {\n        let currentUrlParams = new URLSearchParams(window.location.search);\n        let currentPageNum = currentUrlParams.get(\"page\");\n        let stopNum = currentPageNum * 31;\n        currentPageNum = parseInt(currentPageNum);\n        if (!currentPageNum || (stopNum > arrayLength && direction === \"next\")) {\n            currentPageNum = 1;\n        }\n        if (direction === \"next\" && stopNum < arrayLength) {\n            currentPageNum = currentPageNum + 1;\n        } else if (direction === \"prev\" && currentPageNum !== 1) {\n            currentPageNum = currentPageNum - 1;\n        } else {\n            currentPageNum = 1;\n        }\n        currentUrlParams.set(\"page\", currentPageNum);\n        props.history.push(`?page=${currentPageNum}`);\n        setLoaded(false);\n        FetchSearchPokemon();\n    };\n    if (!loaded) {\n        return (\n            <div className=\"loadingContainer\">\n                {\" \"}\n                <Loading />\n            </div>\n        );\n    }\n    return (\n        <Fragment>\n            <PokeGrid pokemonList={data} />\n            <Pages handlePagesClick={handlePageClick} />\n        </Fragment>\n    );\n};\n\nexport default withRouter(Search);\n"]},"metadata":{},"sourceType":"module"}