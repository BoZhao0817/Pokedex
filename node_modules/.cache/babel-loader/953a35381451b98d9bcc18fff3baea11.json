{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/temp/mp2 copy/src/components/detail/DetailsCalls.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./DetailsCalls.css\";\nimport Loading from \"./../loading/Loading\";\nexport default class DetailsCalls extends Component {\n  constructor(props) {\n    super(props);\n\n    this.effectSort = () => {\n      //Adds percentage value to effect chance\n      const {\n        movesList\n      } = this.state;\n      const effect = movesList.effect_entries;\n\n      if (movesList.effect_chance) {\n        let newEffect = effect[0].short_effect.slice(0, 6) + movesList.effect_chance + effect[0].short_effect.slice(20);\n        this.setState({\n          effectChance: newEffect\n        });\n      }\n    };\n\n    this.renderTypes = params => {\n      switch (params) {\n        default:\n          return \"\";\n\n        case \"grass\":\n          return \"grassDesc\";\n\n        case \"poison\":\n          return \"poisonDesc\";\n\n        case \"fire\":\n          return \"fireDesc\";\n\n        case \"water\":\n          return \"waterDesc\";\n\n        case \"fighting\":\n          return \"fightingDesc\";\n\n        case \"flying\":\n          return \"flyingDesc\";\n\n        case \"dragon\":\n          return \"dragonDesc\";\n\n        case \"normal\":\n          return \"normalDesc\";\n\n        case \"fairy\":\n          return \"fairyDesc\";\n\n        case \"electric\":\n          return \"electricDesc\";\n\n        case \"ground\":\n          return \"groundDesc\";\n\n        case \"ice\":\n          return \"iceDesc\";\n\n        case \"dark\":\n          return \"darkDesc\";\n\n        case \"steel\":\n          return \"steelDesc\";\n\n        case \"bug\":\n          return \"bugDesc\";\n\n        case \"psychic\":\n          return \"psychicDesc\";\n\n        case \"rock\":\n          return \"rockDesc\";\n\n        case \"ghost\":\n          return \"ghostDesc\";\n      }\n    };\n\n    this.state = {\n      abilitesList: [],\n      movesList: [],\n      isLoaded: false,\n      effectChance: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.abilityUrl) {\n      this.setState({\n        isLoaded: false\n      });\n      axios.get(this.props.abilityUrl).then(all => {\n        this.setState({\n          abilitesList: all.data,\n          isLoaded: true\n        });\n      });\n    } else if (this.props.moveUrl) {\n      this.setState({\n        isLoaded: false\n      });\n      axios.get(this.props.moveUrl).then(all => {\n        this.setState({\n          movesList: all.data,\n          isLoaded: true\n        }, this.effectSort);\n      });\n    }\n  }\n\n  render() {\n    const {\n      abilitesList,\n      movesList,\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    }\n\n    if (this.props.abilityUrl) {\n      return React.createElement(\"div\", {\n        className: \"abilityDesc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, abilitesList.effect_entries.map(({\n        short_effect\n      }, i) => React.createElement(\"span\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, short_effect)));\n    } else if (this.props.moveUrl) {\n      return React.createElement(\"div\", {\n        className: \"moveDesc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Accuracy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, movesList.accuracy ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" Accuracy: \", movesList.accuracy, \"%\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" Accuracy: N/A \")), React.createElement(\"div\", {\n        className: \"PP\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \" PP: \", movesList.pp)), React.createElement(\"div\", {\n        className: \"Power\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, movesList.power ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" Power: \", movesList.power) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" Power: N/A \")), React.createElement(\"div\", {\n        className: \"moveType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"typeText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \" Type: \"), React.createElement(\"span\", {\n        className: this.renderTypes(movesList.type.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, movesList.type.name, \" \")), React.createElement(\"div\", {\n        className: \"moveEffect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.state.effectChance ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" \", this.state.effectChance, \" \") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, movesList.effect_entries[0].short_effect, \" \")));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/yeqinghan/temp/mp2 copy/src/components/detail/DetailsCalls.js"],"names":["React","Component","axios","Loading","DetailsCalls","constructor","props","effectSort","movesList","state","effect","effect_entries","effect_chance","newEffect","short_effect","slice","setState","effectChance","renderTypes","params","abilitesList","isLoaded","componentDidMount","abilityUrl","get","then","all","data","moveUrl","render","map","i","accuracy","pp","power","type","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./DetailsCalls.css\";\nimport Loading from \"./../loading/Loading\";\n\nexport default class DetailsCalls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      abilitesList: [],\n      movesList: [],\n      isLoaded: false,\n      effectChance: \"\"\n    };\n  }\n  componentDidMount() {\n    if (this.props.abilityUrl) {\n      this.setState({ isLoaded: false });\n      axios.get(this.props.abilityUrl).then(all => {\n        this.setState({\n          abilitesList: all.data,\n          isLoaded: true\n        });\n      });\n    } else if (this.props.moveUrl) {\n      this.setState({ isLoaded: false });\n      axios.get(this.props.moveUrl).then(all => {\n        this.setState(\n          {\n            movesList: all.data,\n            isLoaded: true\n          },\n          this.effectSort\n        );\n      });\n    }\n  }\n  effectSort = () => {\n    //Adds percentage value to effect chance\n    const { movesList } = this.state;\n    const effect = movesList.effect_entries;\n    if (movesList.effect_chance) {\n      let newEffect =\n        effect[0].short_effect.slice(0, 6) +\n        movesList.effect_chance +\n        effect[0].short_effect.slice(20);\n      this.setState({ effectChance: newEffect });\n    }\n  };\n  renderTypes = params => {\n    switch (params) {\n      default:\n        return \"\";\n      case \"grass\":\n        return \"grassDesc\";\n      case \"poison\":\n        return \"poisonDesc\";\n      case \"fire\":\n        return \"fireDesc\";\n      case \"water\":\n        return \"waterDesc\";\n      case \"fighting\":\n        return \"fightingDesc\";\n      case \"flying\":\n        return \"flyingDesc\";\n      case \"dragon\":\n        return \"dragonDesc\";\n      case \"normal\":\n        return \"normalDesc\";\n      case \"fairy\":\n        return \"fairyDesc\";\n      case \"electric\":\n        return \"electricDesc\";\n      case \"ground\":\n        return \"groundDesc\";\n      case \"ice\":\n        return \"iceDesc\";\n      case \"dark\":\n        return \"darkDesc\";\n      case \"steel\":\n        return \"steelDesc\";\n      case \"bug\":\n        return \"bugDesc\";\n      case \"psychic\":\n        return \"psychicDesc\";\n      case \"rock\":\n        return \"rockDesc\";\n\n      case \"ghost\":\n        return \"ghostDesc\";\n    }\n  };\n\n  render() {\n    const { abilitesList, movesList, isLoaded } = this.state;\n\n    if (!isLoaded) {\n      return <Loading />;\n    }\n    if (this.props.abilityUrl) {\n      return (\n        <div className=\"abilityDesc\">\n          {abilitesList.effect_entries.map(({ short_effect }, i) => (\n            <span key={i}>{short_effect}</span>\n          ))}\n        </div>\n      );\n    } else if (this.props.moveUrl) {\n      return (\n        <div className=\"moveDesc\">\n          <div className=\"Accuracy\">\n            {movesList.accuracy ? (\n              <span> Accuracy: {movesList.accuracy}%</span>\n            ) : (\n              <span> Accuracy: N/A </span>\n            )}\n          </div>\n          <div className=\"PP\">\n            <span> PP: {movesList.pp}</span>\n          </div>\n          <div className=\"Power\">\n            {movesList.power ? (\n              <span> Power: {movesList.power}</span>\n            ) : (\n              <span> Power: N/A </span>\n            )}\n          </div>\n          <div className=\"moveType\">\n            <span className=\"typeText\"> Type: </span>\n            <span className={this.renderTypes(movesList.type.name)}>\n              {movesList.type.name}{\" \"}\n            </span>\n          </div>\n          <div className=\"moveEffect\">\n            {this.state.effectChance ? (\n              <span> {this.state.effectChance} </span>\n            ) : (\n              <span>{movesList.effect_entries[0].short_effect} </span>\n            )}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}