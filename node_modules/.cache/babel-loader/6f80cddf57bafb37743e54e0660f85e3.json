{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/mp22/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getAllPokemon, getPokemon } from \"./Services/pokemon\";\nimport Card from \"./Components/Card\";\nimport Nav from \"./Components/Nav/\";\nimport bg from \"./bg.png\";\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Pokedex from \"./Components/Card/Pokedex\";\nimport SearchBar from \"./Components/SearchBar/SearchBar\";\nimport Dashboard from \"./Components/Layout/Dashboard\";\n\nfunction App() {\n  // //data get from pokemon api,initial state pass an array\n  // const [pokemonData, setPokemonData] = useState([]);\n  // //store the url of next page\n  // const [nextpageUrl, setNextPageurl] = useState('');\n  // const [prevpageUrl, setPrevPageurl] = useState('');\n  // //set data state when use api\n  // const [loading, setLoading] = useState(true);\n  // // string\n  // const currentUrl = 'https://pokeapi.co/api/v2/pokemon'\n  //\n  // //one function, one array\n  // useEffect(() =>{\n  //   async function fetchData(){\n  //     let response = await getAllPokemon(currentUrl);\n  //     console.log(response)\n  //     //response is the data get from api, it has previous and next to the other page\n  //     setNextPageurl(response.next);\n  //     setPrevPageurl(response.previous);\n  //     //passing the results array\n  //     let pokemon = await loadingPokemon(response.results);\n  //     //get data back from Api\n  //     setLoading(false);\n  //   }\n  //   //recreate the function\n  //   fetchData();\n  //\n  // },[]);\n  //\n  // const next = async () => {\n  //   setLoading(true);\n  //   let data = await getAllPokemon(nextpageUrl);\n  //   await loadingPokemon(data.results);\n  //   setNextPageurl(data.next);\n  //   setPrevPageurl(data.previous);\n  //   setLoading(false);\n  // }\n  //\n  // const prev = async () => {\n  //   if (!prevpageUrl) return;\n  //   setLoading(true);\n  //   let data = await getAllPokemon(prevpageUrl);\n  //   await loadingPokemon(data.results);\n  //   setNextPageurl(data.next);\n  //   setPrevPageurl(data.previous);\n  //   setLoading(false);\n  // }\n  //\n  //\n  // const loadingPokemon = async (data) => {\n  //   //local pokemon array take in an array of promises return an array after all promises resolve\n  //   let _pokemonData = await Promise.all(data.map(async pokemon => {\n  //     let pokemonRecord = await getPokemon(pokemon.url);\n  //     return pokemonRecord\n  //   }))\n  //   //store data into react state\n  //   setPokemonData(_pokemonData)\n  // }\n  return (//render to the screen\n    // <Router>\n    // <div>\n    //   {loading ? <h1>...loading...</h1>:(\n    //       <div style={{background:`url(${bg})`}}>\n    //         <Nav/>\n    //         <div className=\"btn\">\n    //           <button onClick={prev}>Prev</button>\n    //           <button onClick={next}>Next</button>\n    //         </div>\n    //         <div className=\"card-grid-container\">\n    //           <Switch>\n    //             {/*<Route exact path=\"/\" component = {Card}/>*/}\n    //             <Route exact path=\"/pokemon/:pokemonIndex\" component = {Pokedex}/>\n    //           </Switch>\n    //           {pokemonData.map((pokemon, i) => {\n    //             return <Card key ={i} pokemon = {pokemon}/>\n    //           })\n    //           }\n    //         </div>\n    //         <div className=\"btn\">\n    //           <button onClick={prev}>Prev</button>\n    //           <button onClick={next}>Next</button>\n    //         </div>\n    //       </div>\n    //   )}\n    // </div>\n    // </Router>\n    React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background: `url(${bg})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/pokemon/:pokemonIndex\",\n      component: Pokedex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })))))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yeqinghan/mp22/src/App.js"],"names":["React","useEffect","useState","getAllPokemon","getPokemon","Card","Nav","bg","HashRouter","Router","Route","Switch","Pokedex","SearchBar","Dashboard","App","background"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAAQC,aAAR,EAAuBC,UAAvB,QAAwC,oBAAxC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,EAAP,MAAe,UAAf;AACA,SAAQC,UAAU,IAAIC,MAAtB,EAA8BC,KAA9B,EAAqCC,MAArC,QAAkD,kBAAlD;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE,OAAMT,EAAG;AAAtB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEO,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,wBAAlB;AAA2C,MAAA,SAAS,EAAEF,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAHF,CADF;AA7BJ;AA2CD;;AAED,eAAeG,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {getAllPokemon, getPokemon} from \"./Services/pokemon\";\nimport Card from \"./Components/Card\"\nimport Nav from \"./Components/Nav/\";\nimport bg from \"./bg.png\";\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Pokedex from \"./Components/Card/Pokedex\";\nimport SearchBar from \"./Components/SearchBar/SearchBar\";\nimport Dashboard from \"./Components/Layout/Dashboard\";\n\nfunction App() {\n  // //data get from pokemon api,initial state pass an array\n  // const [pokemonData, setPokemonData] = useState([]);\n  // //store the url of next page\n  // const [nextpageUrl, setNextPageurl] = useState('');\n  // const [prevpageUrl, setPrevPageurl] = useState('');\n  // //set data state when use api\n  // const [loading, setLoading] = useState(true);\n  // // string\n  // const currentUrl = 'https://pokeapi.co/api/v2/pokemon'\n  //\n  // //one function, one array\n  // useEffect(() =>{\n  //   async function fetchData(){\n  //     let response = await getAllPokemon(currentUrl);\n  //     console.log(response)\n  //     //response is the data get from api, it has previous and next to the other page\n  //     setNextPageurl(response.next);\n  //     setPrevPageurl(response.previous);\n  //     //passing the results array\n  //     let pokemon = await loadingPokemon(response.results);\n  //     //get data back from Api\n  //     setLoading(false);\n  //   }\n  //   //recreate the function\n  //   fetchData();\n  //\n  // },[]);\n  //\n  // const next = async () => {\n  //   setLoading(true);\n  //   let data = await getAllPokemon(nextpageUrl);\n  //   await loadingPokemon(data.results);\n  //   setNextPageurl(data.next);\n  //   setPrevPageurl(data.previous);\n  //   setLoading(false);\n  // }\n  //\n  // const prev = async () => {\n  //   if (!prevpageUrl) return;\n  //   setLoading(true);\n  //   let data = await getAllPokemon(prevpageUrl);\n  //   await loadingPokemon(data.results);\n  //   setNextPageurl(data.next);\n  //   setPrevPageurl(data.previous);\n  //   setLoading(false);\n  // }\n  //\n  //\n  // const loadingPokemon = async (data) => {\n  //   //local pokemon array take in an array of promises return an array after all promises resolve\n  //   let _pokemonData = await Promise.all(data.map(async pokemon => {\n  //     let pokemonRecord = await getPokemon(pokemon.url);\n  //     return pokemonRecord\n  //   }))\n  //   //store data into react state\n  //   setPokemonData(_pokemonData)\n  // }\n\n  return (\n      //render to the screen\n      // <Router>\n      // <div>\n      //   {loading ? <h1>...loading...</h1>:(\n      //       <div style={{background:`url(${bg})`}}>\n      //         <Nav/>\n      //         <div className=\"btn\">\n      //           <button onClick={prev}>Prev</button>\n      //           <button onClick={next}>Next</button>\n      //         </div>\n      //         <div className=\"card-grid-container\">\n      //           <Switch>\n      //             {/*<Route exact path=\"/\" component = {Card}/>*/}\n      //             <Route exact path=\"/pokemon/:pokemonIndex\" component = {Pokedex}/>\n      //           </Switch>\n      //           {pokemonData.map((pokemon, i) => {\n      //             return <Card key ={i} pokemon = {pokemon}/>\n      //           })\n      //           }\n      //         </div>\n      //         <div className=\"btn\">\n      //           <button onClick={prev}>Prev</button>\n      //           <button onClick={next}>Next</button>\n      //         </div>\n      //       </div>\n      //   )}\n      // </div>\n      // </Router>\n      <Router>\n        <div style={{background:`url(${bg})`}}>\n          <Nav/>\n          <SearchBar/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Dashboard} />\n              <Route exact path=\"/pokemon/:pokemonIndex\" component={Pokedex} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}