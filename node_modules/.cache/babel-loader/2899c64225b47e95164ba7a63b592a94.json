{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/mp2/src/Components/Filter/Filter.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./Filter.css\";\n\nconst Filter = props => {\n  const [filterBoxes, setFilterBoxes] = useState([]);\n  const node = useRef();\n\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      // inside click\n      return;\n    } // outside click\n\n\n    props.showFilter();\n  };\n\n  useEffect(() => {\n    if (props.showFilter) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const onChanges = event => {\n    const newv = event.target;\n    const value = newv.value;\n\n    if (newv.checked === true) {\n      if (!filterBoxes.includes(value)) {\n        setFilterBoxes([...filterBoxes, value]);\n      }\n    }\n\n    if (newv.checked === false) {\n      if (filterBoxes.includes(newv.value)) {\n        let newArray = filterBoxes;\n        let filtered = newArray.filter(e => e !== value);\n        setFilterBoxes(filtered);\n      }\n    }\n  };\n\n  const submitFilters = event => {\n    event.preventDefault();\n    const typeFilters = filterBoxes;\n    props.filter(typeFilters);\n    props.showFilter();\n  };\n\n  const types = [\"fire\", \"water\", \"ice\", \"dragon\", \"fighting\", \"flying\", \"grass\", \"rock\", \"ground\", \"fairy\", \"poison\", \"dark\", \"ghost\", \"electric\", \"steel\", \"bug\", \"normal\", \"psychic\"];\n  return React.createElement(\"div\", {\n    ref: node,\n    className: \"typeList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"typesContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, types.map((types, i) => {\n    return React.createElement(\"label\", {\n      key: types,\n      className: \"typeNames\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: e => onChanges(e),\n      value: types,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" \", types);\n  })), React.createElement(\"div\", {\n    className: \"filter-btn-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"filter-btn\",\n    onClick: submitFilters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \" \", \"Done\", \" \"), React.createElement(\"button\", {\n    className: \"filter-btn\",\n    onClick: submitFilters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default Filter;","map":{"version":3,"sources":["/Users/yeqinghan/mp2/src/Components/Filter/Filter.js"],"names":["React","useRef","useState","useEffect","Filter","props","filterBoxes","setFilterBoxes","node","handleClickOutside","e","current","contains","target","showFilter","document","addEventListener","removeEventListener","onChanges","event","newv","value","checked","includes","newArray","filtered","filter","submitFilters","preventDefault","typeFilters","types","map","i"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport \"./Filter.css\";\n\nconst Filter = props => {\n    const [filterBoxes, setFilterBoxes] = useState([]);\n    const node = useRef();\n    const handleClickOutside = e => {\n        if (node.current.contains(e.target)) {\n            // inside click\n            return;\n        }\n        // outside click\n        props.showFilter();\n    };\n    useEffect(() => {\n        if (props.showFilter) {\n            document.addEventListener(\"mousedown\", handleClickOutside);\n        } else {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, []);\n    const onChanges = event => {\n        const newv = event.target;\n        const value = newv.value;\n        if (newv.checked === true) {\n            if (!filterBoxes.includes(value)) {\n                setFilterBoxes([...filterBoxes, value]);\n            }\n        }\n        if (newv.checked === false) {\n            if (filterBoxes.includes(newv.value)) {\n                let newArray = filterBoxes;\n                let filtered = newArray.filter(e => e !== value);\n                setFilterBoxes(filtered);\n            }\n        }\n    };\n    const submitFilters = event => {\n        event.preventDefault();\n        const typeFilters = filterBoxes;\n        props.filter(typeFilters);\n        props.showFilter();\n    };\n\n    const types = [\n        \"fire\",\n        \"water\",\n        \"ice\",\n        \"dragon\",\n        \"fighting\",\n        \"flying\",\n        \"grass\",\n        \"rock\",\n        \"ground\",\n        \"fairy\",\n        \"poison\",\n        \"dark\",\n        \"ghost\",\n        \"electric\",\n        \"steel\",\n        \"bug\",\n        \"normal\",\n        \"psychic\"\n    ];\n    return (\n        <div ref={node} className=\"typeList\">\n            <div className=\"typesContainer\">\n                {types.map((types, i) => {\n                    return (\n                        <label key={types} className=\"typeNames\">\n                            <input\n                                type=\"checkbox\"\n                                onChange={e => onChanges(e)}\n                                value={types}\n                            />{\" \"}\n                            {types}\n                        </label>\n                    );\n                })}\n            </div>\n            <div className=\"filter-btn-container\">\n                <button className=\"filter-btn\" onClick={submitFilters}>\n                    {\" \"}\n                    Done{\" \"}\n                </button>\n                <button className=\"filter-btn\" onClick={submitFilters}>\n                    Clear\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}