{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/mp22/src/Components/Card/Pokedex.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nexport default class Pokemon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      pokemonIndex: '',\n      imageUrl: '',\n      types: [],\n      description: '',\n      stats: {\n        hp: '',\n        attack: '',\n        defense: '',\n        speed: '',\n        specialAttack: '',\n        specialDefense: ''\n      },\n      height: '',\n      weight: '',\n      eggGroups: '',\n      catchRate: '',\n      abilities: '',\n      genderRatioMale: '',\n      genderRatioFemale: '',\n      evs: '',\n      hatchSteps: '',\n      themeColor: '#EF5350'\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pokemonIndex\n    } = this.props.match.params; // Urls for pokemon information\n\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`; // Get Pokemon Information\n\n    const pokemonRes = await Axios.get(pokemonUrl);\n    const name = pokemonRes.data.name;\n    const imageUrl = pokemonRes.data.sprites.front_default;\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = '';\n    pokemonRes.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case 'hp':\n          hp = stat['base_stat'];\n          break;\n\n        case 'attack':\n          attack = stat['base_stat'];\n          break;\n\n        case 'defense':\n          defense = stat['base_stat'];\n          break;\n\n        case 'speed':\n          speed = stat['base_stat'];\n          break;\n\n        case 'special-attack':\n          specialAttack = stat['base_stat'];\n          break;\n\n        case 'special-defense':\n          specialDefense = stat['base_stat'];\n          break;\n\n        default:\n          break;\n      }\n    }); // Convert Decimeters to Feet... The + 0.0001 * 100 ) / 100 is for rounding to two decimal places :)\n\n    const height = Math.round((pokemonRes.data.height * 0.328084 + 0.00001) * 100) / 100;\n    const weight = Math.round((pokemonRes.data.weight * 0.220462 + 0.00001) * 100) / 100;\n    const types = pokemonRes.data.types.map(type => type.type.name);\n    const themeColor = `${TYPE_COLORS[types[types.length - 1]]}`;\n    const abilities = pokemonRes.data.abilities.map(ability => {\n      return ability.ability.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n    }).join(', ');\n    const evs = pokemonRes.data.stats.filter(stat => {\n      if (stat.effort > 0) {\n        return true;\n      }\n\n      return false;\n    }).map(stat => {\n      return `${stat.effort} ${stat.stat.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}`;\n    }).join(', '); // Get Pokemon Description .... Is from a different end point uggh\n\n    await Axios.get(pokemonSpeciesUrl).then(res => {\n      let description = '';\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name === 'en') {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n      const femaleRate = res.data['gender_rate'];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n      const catchRate = Math.round(100 / 255 * res.data['capture_rate']);\n      const eggGroups = res.data['egg_groups'].map(group => {\n        return group.name.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n      }).join(', ');\n      const hatchSteps = 255 * (res.data['hatch_counter'] + 1);\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        catchRate,\n        eggGroups,\n        hatchSteps\n      });\n    });\n    this.setState({\n      imageUrl,\n      pokemonIndex,\n      name,\n      types,\n      stats: {\n        hp,\n        attack,\n        defense,\n        speed,\n        specialAttack,\n        specialDefense\n      },\n      themeColor,\n      height,\n      weight,\n      abilities,\n      evs\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/yeqinghan/mp22/src/Components/Card/Pokedex.js"],"names":["React","Component","Axios","Pokemon","state","name","pokemonIndex","imageUrl","types","description","stats","hp","attack","defense","speed","specialAttack","specialDefense","height","weight","eggGroups","catchRate","abilities","genderRatioMale","genderRatioFemale","evs","hatchSteps","themeColor","componentDidMount","props","match","params","pokemonUrl","pokemonSpeciesUrl","pokemonRes","get","data","sprites","front_default","map","stat","Math","round","type","TYPE_COLORS","length","ability","toLowerCase","split","s","charAt","toUpperCase","substring","join","filter","effort","then","res","flavor_text_entries","some","flavor","language","flavor_text","femaleRate","group","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\n\nexport default class Pokemon extends Component {\n    state = {\n        name: '',\n        pokemonIndex: '',\n        imageUrl: '',\n        types: [],\n        description: '',\n        stats: {\n            hp: '',\n            attack: '',\n            defense: '',\n            speed: '',\n            specialAttack: '',\n            specialDefense: ''\n        },\n        height: '',\n        weight: '',\n        eggGroups: '',\n        catchRate: '',\n        abilities: '',\n        genderRatioMale: '',\n        genderRatioFemale: '',\n        evs: '',\n        hatchSteps: '',\n        themeColor: '#EF5350'\n    };\n\n    async componentDidMount() {\n        const { pokemonIndex } = this.props.match.params;\n\n        // Urls for pokemon information\n        const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n        const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n\n        // Get Pokemon Information\n        const pokemonRes = await Axios.get(pokemonUrl);\n\n        const name = pokemonRes.data.name;\n        const imageUrl = pokemonRes.data.sprites.front_default;\n\n        let { hp, attack, defense, speed, specialAttack, specialDefense } = '';\n\n        pokemonRes.data.stats.map(stat => {\n            switch (stat.stat.name) {\n                case 'hp':\n                    hp = stat['base_stat'];\n                    break;\n                case 'attack':\n                    attack = stat['base_stat'];\n                    break;\n                case 'defense':\n                    defense = stat['base_stat'];\n                    break;\n                case 'speed':\n                    speed = stat['base_stat'];\n                    break;\n                case 'special-attack':\n                    specialAttack = stat['base_stat'];\n                    break;\n                case 'special-defense':\n                    specialDefense = stat['base_stat'];\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        // Convert Decimeters to Feet... The + 0.0001 * 100 ) / 100 is for rounding to two decimal places :)\n        const height =\n            Math.round((pokemonRes.data.height * 0.328084 + 0.00001) * 100) / 100;\n\n        const weight =\n            Math.round((pokemonRes.data.weight * 0.220462 + 0.00001) * 100) / 100;\n\n        const types = pokemonRes.data.types.map(type => type.type.name);\n\n        const themeColor = `${TYPE_COLORS[types[types.length - 1]]}`;\n\n        const abilities = pokemonRes.data.abilities\n            .map(ability => {\n                return ability.ability.name\n                    .toLowerCase()\n                    .split('-')\n                    .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                    .join(' ');\n            })\n            .join(', ');\n\n        const evs = pokemonRes.data.stats\n            .filter(stat => {\n                if (stat.effort > 0) {\n                    return true;\n                }\n                return false;\n            })\n            .map(stat => {\n                return `${stat.effort} ${stat.stat.name\n                    .toLowerCase()\n                    .split('-')\n                    .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                    .join(' ')}`;\n            })\n            .join(', ');\n\n        // Get Pokemon Description .... Is from a different end point uggh\n        await Axios.get(pokemonSpeciesUrl).then(res => {\n            let description = '';\n            res.data.flavor_text_entries.some(flavor => {\n                if (flavor.language.name === 'en') {\n                    description = flavor.flavor_text;\n                    return;\n                }\n            });\n            const femaleRate = res.data['gender_rate'];\n            const genderRatioFemale = 12.5 * femaleRate;\n            const genderRatioMale = 12.5 * (8 - femaleRate);\n\n            const catchRate = Math.round((100 / 255) * res.data['capture_rate']);\n\n            const eggGroups = res.data['egg_groups']\n                .map(group => {\n                    return group.name\n                        .toLowerCase()\n                        .split(' ')\n                        .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n                        .join(' ');\n                })\n                .join(', ');\n\n            const hatchSteps = 255 * (res.data['hatch_counter'] + 1);\n\n            this.setState({\n                description,\n                genderRatioFemale,\n                genderRatioMale,\n                catchRate,\n                eggGroups,\n                hatchSteps\n            });\n        });\n\n        this.setState({\n            imageUrl,\n            pokemonIndex,\n            name,\n            types,\n            stats: {\n                hp,\n                attack,\n                defense,\n                speed,\n                specialAttack,\n                specialDefense\n            },\n            themeColor,\n            height,\n            weight,\n            abilities,\n            evs\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}