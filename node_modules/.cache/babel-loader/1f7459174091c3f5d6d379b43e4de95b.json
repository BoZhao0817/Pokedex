{"ast":null,"code":"const padNumber = (num, size = 3) => {\n  let str = num.toString();\n\n  while (str.length < size) {\n    str = str;\n  }\n\n  return str;\n};\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\nconst deepEqual = (a, b) => {\n  if (typeof a === 'object' && a != null && typeof b === 'object' && b != null) {\n    const count = [0, 0]; //eslint-disable-next-line no-unused-vars\n\n    for (const _ in a) {\n      count[0]++;\n    } //eslint-disable-next-line no-unused-vars\n\n\n    for (const _ in b) {\n      count[1]++;\n    }\n\n    if (count[0] - count[1] !== 0) {\n      return false;\n    }\n\n    for (const key in a) {\n      if (!(key in b) || !deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    for (const key in b) {\n      if (!(key in a) || !deepEqual(b[key], a[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return a === b;\n};\n\nexport { padNumber, capitalize, deepEqual };","map":{"version":3,"sources":["/Users/yeqinghan/WebstormProjects/temp/mp2/src/utils.js"],"names":["padNumber","num","size","str","toString","length","capitalize","string","charAt","toUpperCase","slice","deepEqual","a","b","count","_","key"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAACC,GAAD,EAAMC,IAAI,GAAG,CAAb,KAAmB;AACjC,MAAIC,GAAG,GAAGF,GAAG,CAACG,QAAJ,EAAV;;AACA,SAAOD,GAAG,CAACE,MAAJ,GAAaH,IAApB,EAA0B;AACtBC,IAAAA,GAAG,GAAGA,GAAN;AACH;;AACD,SAAOA,GAAP;AACH,CAND;;AAQA,MAAMG,UAAU,GAAGC,MAAM,IAAIA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAA9D;;AAEA,MAAMC,SAAS,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,MACI,OAAOD,CAAP,KAAa,QAAb,IACAA,CAAC,IAAI,IADL,IAEC,OAAOC,CAAP,KAAa,QAAb,IAAyBA,CAAC,IAAI,IAHnC,EAIE;AACE,UAAMC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAd,CADF,CAEE;;AACA,SAAK,MAAMC,CAAX,IAAgBH,CAAhB,EAAmB;AACfE,MAAAA,KAAK,CAAC,CAAD,CAAL;AACH,KALH,CAME;;;AACA,SAAK,MAAMC,CAAX,IAAgBF,CAAhB,EAAmB;AACfC,MAAAA,KAAK,CAAC,CAAD,CAAL;AACH;;AACD,QAAIA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAhB,KAAwB,CAA5B,EAA+B;AAC3B,aAAO,KAAP;AACH;;AACD,SAAK,MAAME,GAAX,IAAkBJ,CAAlB,EAAqB;AACjB,UAAI,EAAEI,GAAG,IAAIH,CAAT,KAAe,CAACF,SAAS,CAACC,CAAC,CAACI,GAAD,CAAF,EAASH,CAAC,CAACG,GAAD,CAAV,CAA7B,EAA+C;AAC3C,eAAO,KAAP;AACH;AACJ;;AACD,SAAK,MAAMA,GAAX,IAAkBH,CAAlB,EAAqB;AACjB,UAAI,EAAEG,GAAG,IAAIJ,CAAT,KAAe,CAACD,SAAS,CAACE,CAAC,CAACG,GAAD,CAAF,EAASJ,CAAC,CAACI,GAAD,CAAV,CAA7B,EAA+C;AAC3C,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AACD,SAAOJ,CAAC,KAAKC,CAAb;AACH,CA/BD;;AAiCA,SAAQb,SAAR,EAAmBM,UAAnB,EAA+BK,SAA/B","sourcesContent":["const padNumber = (num, size = 3) => {\n    let str = num.toString();\n    while (str.length < size) {\n        str = str;\n    }\n    return str;\n};\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\nconst deepEqual = (a, b) => {\n    if (\n        typeof a === 'object' &&\n        a != null &&\n        (typeof b === 'object' && b != null)\n    ) {\n        const count = [0, 0];\n        //eslint-disable-next-line no-unused-vars\n        for (const _ in a) {\n            count[0]++;\n        }\n        //eslint-disable-next-line no-unused-vars\n        for (const _ in b) {\n            count[1]++;\n        }\n        if (count[0] - count[1] !== 0) {\n            return false;\n        }\n        for (const key in a) {\n            if (!(key in b) || !deepEqual(a[key], b[key])) {\n                return false;\n            }\n        }\n        for (const key in b) {\n            if (!(key in a) || !deepEqual(b[key], a[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a === b;\n};\n\nexport {padNumber, capitalize, deepEqual};"]},"metadata":{},"sourceType":"module"}