{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/temp/mp2 copy/src/components/detail/Detail.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Detail.css\";\nimport AbilityDetail from \"../abilityDetail/AbilityDetails\";\nimport Loading from \"./../loading/Loading\";\nimport ErrorMessage from \"./../errorMessage/ErrorMessage\";\nimport { Link } from 'react-router-dom';\nimport PokeImage from \"../pokeImg/pokeImg\";\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.fetchPokeName();\n    };\n\n    this.componentDidUpdate = (prevState, prevProps) => {\n      if (this.props.location.pathname !== prevState.location.pathname) {\n        this.fetchPokeName();\n      }\n    };\n\n    this.fetchPokeName = async () => {\n      this.setState({\n        isLoaded: false,\n        error: false\n      });\n      const pokeName = this.props.match.params.name;\n      const lowerCasePokeName = pokeName.toLowerCase();\n\n      try {\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${lowerCasePokeName}/`);\n        this.setState({\n          pokeData: res.data,\n          isLoaded: true\n        }, this.handleWeightChange(res.data.weight));\n      } catch (error) {\n        this.setState({\n          errorCode: error.request.status,\n          error: true,\n          isLoaded: true\n        });\n      }\n    };\n\n    this.handleWeightChange = weight => {\n      //Fixes weight to better show weight\n      let weight1 = weight.toString();\n      let newWeight = weight1.slice(0, -1) + \".\" + weight1.slice(-1);\n      this.setState({\n        weight: newWeight\n      });\n    };\n\n    this.handleChange = (name, url, key) => {\n      if (name === \"ability\") {\n        this.setState({\n          abilityUrl: url,\n          abilityOn: !this.state.abilityOn,\n          key: key\n        });\n      } else {\n        this.setState({\n          key: \"\"\n        });\n      }\n    };\n\n    this.renderType = params => {\n      switch (params) {\n        default:\n          return \"\";\n\n        case \"grass\":\n          return \"grass\";\n\n        case \"poison\":\n          return \"poison\";\n\n        case \"fire\":\n          return \"fire\";\n\n        case \"water\":\n          return \"water\";\n\n        case \"fighting\":\n          return \"fighting\";\n\n        case \"flying\":\n          return \"flying\";\n\n        case \"dragon\":\n          return \"dragon\";\n\n        case \"normal\":\n          return \"normal\";\n\n        case \"fairy\":\n          return \"fairy\";\n\n        case \"electric\":\n          return \"electric\";\n\n        case \"ground\":\n          return \"ground\";\n\n        case \"ice\":\n          return \"ice\";\n\n        case \"dark\":\n          return \"dark\";\n\n        case \"steel\":\n          return \"steel\";\n\n        case \"bug\":\n          return \"bug\";\n\n        case \"psychic\":\n          return \"psychic\";\n\n        case \"rock\":\n          return \"rock\";\n\n        case \"ghost\":\n          return \"ghost\";\n      }\n    };\n\n    this.state = {\n      pokeData: [],\n      isLoaded: false,\n      abilityOn: false,\n      abilityUrl: \"\",\n      weight: \"\",\n      moveUrl: \"\",\n      key: \"\",\n      error: false,\n      errorCode: null\n    };\n  }\n\n  render() {\n    const {\n      pokeData,\n      isLoaded,\n      weight,\n      error,\n      errorCode\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"loadingContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }));\n    }\n\n    if (error) {\n      return React.createElement(\"div\", {\n        className: \"detailError\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(ErrorMessage, {\n        errorCode: errorCode,\n        pokeNames: this.props.match.params.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    }\n\n    if (isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"pokeDetail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"topBoxWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"linkContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/detail/${pokeData.id - 1}`,\n        className: \"button is-pulled-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"prev\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-paw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), \"Prev\")), React.createElement(Link, {\n        to: `/detail/${pokeData.id + 1}`,\n        className: \"button is-pulled-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Next\", React.createElement(\"i\", {\n        className: \"fas fa-paw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"pokePicture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pokeNameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"pokeDetailName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, pokeData.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"#\", pokeData.id)), React.createElement(\"img\", {\n        src: pokeData.sprites.front_default,\n        alt: \"pokemon icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"weightContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"p-weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \" Weight \"), React.createElement(\"div\", {\n        className: \"weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \" \", weight, \" kg \"), React.createElement(\"div\", {\n        className: \"typeContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, pokeData.types.map(({\n        type\n      }, i) => React.createElement(\"div\", {\n        className: this.renderType(type.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"s-Type\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, type.name)))))), React.createElement(\"div\", {\n        className: \"shiny\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"p-Shiny\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Shiny Version \"), React.createElement(\"div\", {\n        className: \"shinySprite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: pokeData.sprites.front_shiny,\n        alt: \"shiny version\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"abilityContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"p-Abilites\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Abilities\"), React.createElement(\"div\", {\n        className: \"pokeAbilities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, pokeData.abilities.map(({\n        ability\n      }, i) => React.createElement(AbilityDetail, {\n        key: i,\n        name: ability.name,\n        url: ability.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"p-Stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \" Stats \"), React.createElement(\"div\", {\n        className: \"pokeContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, pokeData.stats.map(({\n        base_stat,\n        stat\n      }, i) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"statName\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \" \", stat.name, \" \"), React.createElement(\"div\", {\n        className: \"statContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: base_stat\n        },\n        className: \"statBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, base_stat))))))));\n    }\n  }\n\n}\n\nexport default Detail;","map":{"version":3,"sources":["/Users/yeqinghan/temp/mp2 copy/src/components/detail/Detail.js"],"names":["React","Component","axios","AbilityDetail","Loading","ErrorMessage","Link","PokeImage","Detail","constructor","props","componentDidMount","fetchPokeName","componentDidUpdate","prevState","prevProps","location","pathname","setState","isLoaded","error","pokeName","match","params","name","lowerCasePokeName","toLowerCase","res","get","pokeData","data","handleWeightChange","weight","errorCode","request","status","weight1","toString","newWeight","slice","handleChange","url","key","abilityUrl","abilityOn","state","renderType","moveUrl","render","id","sprites","front_default","types","map","type","i","front_shiny","abilities","ability","stats","base_stat","stat","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./Detail.css\";\nimport AbilityDetail from \"../abilityDetail/AbilityDetails\";\nimport Loading from \"./../loading/Loading\";\nimport ErrorMessage from \"./../errorMessage/ErrorMessage\";\nimport {Link} from 'react-router-dom';\nimport PokeImage from \"../pokeImg/pokeImg\";\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokeData: [],\n      isLoaded: false,\n      abilityOn: false,\n      abilityUrl: \"\",\n      weight: \"\",\n      moveUrl: \"\",\n      key: \"\",\n      error: false,\n      errorCode: null\n    };\n  }\n  componentDidMount = () => {\n    this.fetchPokeName();\n  };\n\n  componentDidUpdate = (prevState, prevProps) => {\n    if (this.props.location.pathname !== prevState.location.pathname) {\n      this.fetchPokeName();\n    }\n  };\n  fetchPokeName = async () => {\n    this.setState({\n      isLoaded: false,\n      error: false\n    });\n    const pokeName = this.props.match.params.name;\n    const lowerCasePokeName = pokeName.toLowerCase();\n    try {\n      const res = await axios.get(\n        `https://pokeapi.co/api/v2/pokemon/${lowerCasePokeName}/`\n      );\n      this.setState(\n        {\n          pokeData: res.data,\n          isLoaded: true\n        },\n        this.handleWeightChange(res.data.weight)\n      );\n    } catch (error) {\n      this.setState({\n        errorCode: error.request.status,\n        error: true,\n        isLoaded: true\n      });\n    }\n  };\n  handleWeightChange = weight => {\n    //Fixes weight to better show weight\n    let weight1 = weight.toString();\n    let newWeight = weight1.slice(0, -1) + \".\" + weight1.slice(-1);\n    this.setState({ weight: newWeight });\n  };\n  handleChange = (name, url, key) => {\n    if (name === \"ability\") {\n      this.setState({\n        abilityUrl: url,\n        abilityOn: !this.state.abilityOn,\n        key: key\n      });\n    } else {\n      this.setState({ key: \"\" });\n    }\n  };\n  renderType = params => {\n    switch (params) {\n      default:\n        return \"\";\n      case \"grass\":\n        return \"grass\";\n      case \"poison\":\n        return \"poison\";\n      case \"fire\":\n        return \"fire\";\n      case \"water\":\n        return \"water\";\n      case \"fighting\":\n        return \"fighting\";\n      case \"flying\":\n        return \"flying\";\n      case \"dragon\":\n        return \"dragon\";\n      case \"normal\":\n        return \"normal\";\n      case \"fairy\":\n        return \"fairy\";\n      case \"electric\":\n        return \"electric\";\n      case \"ground\":\n        return \"ground\";\n      case \"ice\":\n        return \"ice\";\n      case \"dark\":\n        return \"dark\";\n      case \"steel\":\n        return \"steel\";\n      case \"bug\":\n        return \"bug\";\n      case \"psychic\":\n        return \"psychic\";\n      case \"rock\":\n        return \"rock\";\n      case \"ghost\":\n        return \"ghost\";\n    }\n  };\n\n  render() {\n    const { pokeData, isLoaded, weight, error, errorCode } = this.state;\n\n    if (!isLoaded) {\n      return (\n        <div className=\"loadingContainer\">\n          <Loading />\n        </div>\n      );\n    }\n    if (error) {\n      return (\n        <div className=\"detailError\">\n          <ErrorMessage\n            errorCode={errorCode}\n            pokeNames={this.props.match.params.name}\n          />\n        </div>\n      );\n    }\n    if (isLoaded) {\n      return (\n        <div className=\"pokeDetail\">\n          <div className=\"topBoxWrapper\">\n            <div className=\"linkContainer\">\n              <Link\n                  to={`/detail/${pokeData.id - 1}`}\n                  className=\"button is-pulled-left\">\n                <button className=\"prev\">\n                  <i className=\"fas fa-paw\"/>\n                  Prev\n                </button>\n              </Link>\n              <Link\n                  to={`/detail/${pokeData.id + 1}`}\n                  className=\"button is-pulled-right\">\n                <button className=\"next\">\n                  Next\n                  <i className=\"fas fa-paw\"/>\n                </button>\n              </Link>\n            </div>\n            <div className=\"pokePicture\">\n              <div className=\"pokeNameContainer\">\n                <h3 className=\"pokeDetailName\">{pokeData.name}</h3>\n                <p>#{pokeData.id}</p>\n              </div>\n              {/*<PokeImage id={pokeData.id} name={pokeData.name} size={250} animate />*/}\n              <img src={pokeData.sprites.front_default} alt=\"pokemon icon\" />\n            </div>\n            <div className=\"weightContainer\">\n              <p className=\"p-weight\"> Weight </p>\n              <div className=\"weight\">\n                <p> {weight} kg </p>\n                <div className=\"typeContainer\">\n                  {pokeData.types.map(({ type }, i) => (\n                      <div className={this.renderType(type.name)}>\n                  <span className=\"s-Type\" key={i}>\n                    {type.name}\n                  </span>\n                      </div>\n                  ))}\n                </div>\n              </div>\n\n            </div>\n\n            <div className=\"shiny\">\n              <h3 className=\"p-Shiny\">Shiny Version </h3>\n              <div className=\"shinySprite\">\n                <img src={pokeData.sprites.front_shiny} alt=\"shiny version\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"abilityContainer\">\n            <h3 className=\"p-Abilites\">Abilities</h3>\n            <div className=\"pokeAbilities\">\n              {pokeData.abilities.map(({ ability }, i) => (\n                <AbilityDetail key={i} name={ability.name} url={ability.url} />\n              ))}\n            </div>\n          </div>\n          <div className=\"stats\">\n            <h3 className=\"p-Stats\"> Stats </h3>\n            <div className=\"pokeContainer\">\n              {pokeData.stats.map(({ base_stat, stat }, i) => (\n                <div>\n                  <span className=\"statName\" key={i}>\n                    {\" \"}\n                    {stat.name}{\" \"}\n                  </span>\n                  <div className=\"statContainer\">\n                    <div style={{ width: base_stat }} className=\"statBar\">\n                      <span>{base_stat}</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}