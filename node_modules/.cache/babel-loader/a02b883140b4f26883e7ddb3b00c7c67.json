{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/mp22/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { getAllPokemon, getPokemon } from \"./Services/pokemon\";\n\nfunction App() {\n  //data get from pokemon api,initial state pass an array\n  const [pokemonData, setPokemonData] = useState([]); //store the url of next page\n\n  const [nextpageUrl, setNextPageurl] = useState('');\n  const [prevpageUrl, setPrevPageurl] = useState(''); //set data state when use api\n\n  const [loading, setLoading] = useState(true); // string\n\n  const currentUrl = 'https://pokeapi.co/api/v2/pokemon'; //one function, one array\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(currentUrl);\n      console.log(response); //response is the data get from api, it has previous and next to the other page\n\n      setNextPageurl(response.next);\n      setPrevPageurl(response.previous); //passing the results array\n\n      await loadingPokemon(response.results); //get data back from Api\n\n      setLoading(false);\n    } //recreate the function\n\n\n    fetchData();\n  }, []);\n\n  const loadingPokemon = async data => {\n    //local pokemon array take in an array of promises return an array after all promises resolve\n    let _pokemon = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon);\n      return pokemonRecord;\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, loading ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"...loading...\") : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"data is fetched\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yeqinghan/mp22/src/App.js"],"names":["React","useEffect","useState","getAllPokemon","getPokemon","App","pokemonData","setPokemonData","nextpageUrl","setNextPageurl","prevpageUrl","setPrevPageurl","loading","setLoading","currentUrl","fetchData","response","console","log","next","previous","loadingPokemon","results","data","_pokemon","Promise","all","map","pokemon","pokemonRecord"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,WAAP;AACA,SAAQC,aAAR,EAAuBC,UAAvB,QAAwC,oBAAxC;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C,CAFa,CAGb;;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C,CALa,CAMb;;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC,CAPa,CAQb;;AACA,QAAMY,UAAU,GAAG,mCAAnB,CATa,CAWb;;AACAb,EAAAA,SAAS,CAAC,MAAK;AACb,mBAAec,SAAf,GAA0B;AACxB,UAAIC,QAAQ,GAAG,MAAMb,aAAa,CAACW,UAAD,CAAlC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFwB,CAGxB;;AACAP,MAAAA,cAAc,CAACO,QAAQ,CAACG,IAAV,CAAd;AACAR,MAAAA,cAAc,CAACK,QAAQ,CAACI,QAAV,CAAd,CALwB,CAMxB;;AACA,YAAMC,cAAc,CAACL,QAAQ,CAACM,OAAV,CAApB,CAPwB,CAQxB;;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXY,CAYb;;;AACAE,IAAAA,SAAS;AAEV,GAfQ,EAeP,EAfO,CAAT;;AAiBA,QAAMM,cAAc,GAAG,MAAOE,IAAP,IAAgB;AACrC;AACA,QAAIC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAaH,IAAI,CAACI,GAAL,CAAS,MAAMC,OAAN,IAAgB;AACzD,UAAIC,aAAa,GAAG,MAAMzB,UAAU,CAACwB,OAAD,CAApC;AACA,aAAOC,aAAP;AACD,KAHiC,CAAb,CAArB;AAMD,GARD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFN,CADF;AAOD;;AAED,eAAeP,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {getAllPokemon, getPokemon} from \"./Services/pokemon\";\n\nfunction App() {\n  //data get from pokemon api,initial state pass an array\n  const [pokemonData, setPokemonData] = useState([]);\n  //store the url of next page\n  const [nextpageUrl, setNextPageurl] = useState('');\n  const [prevpageUrl, setPrevPageurl] = useState('');\n  //set data state when use api\n  const [loading, setLoading] = useState(true);\n  // string\n  const currentUrl = 'https://pokeapi.co/api/v2/pokemon'\n\n  //one function, one array\n  useEffect(() =>{\n    async function fetchData(){\n      let response = await getAllPokemon(currentUrl);\n      console.log(response)\n      //response is the data get from api, it has previous and next to the other page\n      setNextPageurl(response.next);\n      setPrevPageurl(response.previous);\n      //passing the results array\n      await loadingPokemon(response.results);\n      //get data back from Api\n      setLoading(false);\n    }\n    //recreate the function\n    fetchData();\n\n  },[]);\n\n  const loadingPokemon = async (data) => {\n    //local pokemon array take in an array of promises return an array after all promises resolve\n    let _pokemon = await Promise.all((data.map(async pokemon =>{\n      let pokemonRecord = await getPokemon(pokemon);\n      return pokemonRecord\n    })))\n\n\n  }\n\n  return (\n    <div>\n      {loading ? <h1>...loading...</h1>:(\n          <h1>data is fetched</h1>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}