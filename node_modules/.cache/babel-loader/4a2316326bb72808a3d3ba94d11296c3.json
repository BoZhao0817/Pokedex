{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/temp/mp2/src/Components/FilterResult/FilterResult.js\";\nimport CardList from \"../Card/CardList\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\n\nclass FilterResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidUpdate = (prevProps, prevState) => {\n      if (this.props.filterList !== prevProps.filterList) {\n        this.handleFilterList();\n      }\n\n      if (this.state.startNum !== prevState.startNum) {\n        this.fetchPokemon();\n      }\n\n      if (this.state.sliceNum !== prevState.sliceNum) {\n        this.fetchPokemon();\n      }\n    };\n\n    this.handleFilterList = async () => {\n      let regexPat = /\\/pokemon\\/(\\d+)\\//;\n      let endNum;\n      let startNum;\n      let currentUrlParams = new URLSearchParams(window.location.search);\n      let currentPageNum = currentUrlParams.get(\"page\");\n      currentPageNum = parseInt(currentPageNum);\n      let pokeList = [];\n      const {\n        filterList\n      } = this.props;\n      this.setState({\n        sorted: false,\n        newPokemonList: []\n      });\n\n      if (this.props.filterList.length < 1) {\n        this.fetchPokemon();\n      }\n\n      if (!currentPageNum) {\n        endNum = 31;\n        startNum = 0;\n      } else {\n        endNum = currentPageNum * 31;\n        startNum = endNum - 31;\n      } //Gathers filter data from pokeapi\n\n\n      let filterPromises = filterList.map(filter => axios.get(`https://pokeapi.co/api/v2/type/${filter}/`));\n      await Promise.all(filterPromises).then(all => {\n        const data = all.map(result => result.data.pokemon);\n        data.forEach(poke => poke.map(pokemon => pokeList.push(pokemon.pokemon)));\n      }); //Adds a id object to the pokemon object for getting images\n\n      pokeList.map(poke => {\n        let id = poke.url.match(regexPat)[1];\n        return poke[\"id\"] = id;\n      }); //Slice pokeList to handle pagination\n\n      let cutPokemon = pokeList.slice(startNum, endNum);\n      this.setState({\n        newPokemonList: cutPokemon,\n        sorted: true\n      });\n    };\n\n    this.handlePagesClick = direction => {\n      this.setState({\n        sorted: false\n      });\n      let currentUrlParams = new URLSearchParams(window.location.search);\n      let currentPageNum = currentUrlParams.get(\"page\");\n      currentPageNum = parseInt(currentPageNum);\n\n      if (!currentPageNum) {\n        currentPageNum = 1;\n      }\n\n      if (direction === \"next\") {\n        currentPageNum = currentPageNum + 1;\n      } else if (direction === \"prev\" && currentPageNum !== 1) {\n        currentPageNum = currentPageNum - 1;\n      } else {\n        currentPageNum = 1;\n      }\n\n      currentUrlParams.set(\"page\", currentPageNum);\n      this.props.history.push(`?page=${currentPageNum}`); //If filterList array is empty fetch pokemon normally else fetch the typed pokemon with handlefilterlist\n\n      if (this.props.filterList.length < 1) {\n        this.fetchPokemon();\n      } else {\n        this.handleFilterList();\n      }\n    };\n\n    this.fetchPokemon = async () => {\n      let offsetNum = 0;\n      let regexPat = /\\/pokemon\\/(\\d+)\\//;\n      let currentUrlParams = new URLSearchParams(window.location.search);\n      let currentPageNum = currentUrlParams.get(\"page\");\n\n      if (currentPageNum > 26) {\n        this.props.history.push(\"/404\");\n      }\n\n      if (!currentPageNum) {\n        offsetNum = 0;\n      } else {\n        offsetNum = currentPageNum * 30 - 30;\n      }\n\n      this.setState({\n        sorted: false,\n        pokemonList: []\n      }); //Fetches pokemon\n\n      const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/?limit=30&offset=${offsetNum}`);\n      let pokemon = res.data.results;\n      pokemon.map(pokemon => {\n        let id = pokemon.url.match(regexPat)[1];\n        return pokemon[\"id\"] = id; //Adds id to pokemon object\n      });\n      this.setState({\n        pokemonList: pokemon,\n        sorted: true\n      });\n    };\n\n    this.state = {\n      pokemon: [],\n      pokemonList: [],\n      loading: false,\n      sorted: false,\n      sliceNum: 0,\n      error: null,\n      newPokemonList: [],\n      pokeFilter: [],\n      sliceEndNum: 50,\n      pageNum: 1\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPokemon();\n  }\n\n  render() {\n    const {\n      newPokemonList,\n      pokemonList,\n      sorted,\n      error\n    } = this.state;\n\n    if (newPokemonList.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        pokemonList: newPokemonList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      pokemonList: pokemonList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(FilterResult);","map":{"version":3,"sources":["/Users/yeqinghan/temp/mp2/src/Components/FilterResult/FilterResult.js"],"names":["CardList","React","Component","axios","withRouter","FilterResult","constructor","props","componentDidUpdate","prevProps","prevState","filterList","handleFilterList","state","startNum","fetchPokemon","sliceNum","regexPat","endNum","currentUrlParams","URLSearchParams","window","location","search","currentPageNum","get","parseInt","pokeList","setState","sorted","newPokemonList","length","filterPromises","map","filter","Promise","all","then","data","result","pokemon","forEach","poke","push","id","url","match","cutPokemon","slice","handlePagesClick","direction","set","history","offsetNum","pokemonList","res","results","loading","error","pokeFilter","sliceEndNum","pageNum","componentDidMount","render"],"mappings":"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","sourcesContent":["import CardList from \"../Card/CardList\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\n\n\nclass FilterResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pokemon: [],\n            pokemonList: [],\n            loading: false,\n            sorted: false,\n            sliceNum: 0,\n            error: null,\n            newPokemonList: [],\n            pokeFilter: [],\n            sliceEndNum: 50,\n            pageNum: 1\n        };\n    }\n    componentDidMount() {\n        this.fetchPokemon();\n    }\n    componentDidUpdate = (prevProps, prevState) => {\n        if (this.props.filterList !== prevProps.filterList) {\n            this.handleFilterList();\n        }\n        if (this.state.startNum !== prevState.startNum) {\n            this.fetchPokemon();\n        }\n        if (this.state.sliceNum !== prevState.sliceNum) {\n            this.fetchPokemon();\n        }\n    };\n    handleFilterList = async () => {\n        let regexPat = /\\/pokemon\\/(\\d+)\\//;\n        let endNum;\n        let startNum;\n        let currentUrlParams = new URLSearchParams(window.location.search);\n        let currentPageNum = currentUrlParams.get(\"page\");\n        currentPageNum = parseInt(currentPageNum);\n        let pokeList = [];\n        const { filterList } = this.props;\n        this.setState({\n            sorted: false,\n            newPokemonList: []\n        });\n\n        if (this.props.filterList.length < 1) {\n            this.fetchPokemon();\n        }\n        if (!currentPageNum) {\n            endNum = 31;\n            startNum = 0;\n        } else {\n            endNum = currentPageNum * 31;\n            startNum = endNum - 31;\n        }\n        //Gathers filter data from pokeapi\n        let filterPromises = filterList.map(filter =>\n            axios.get(`https://pokeapi.co/api/v2/type/${filter}/`)\n        );\n        await Promise.all(filterPromises).then(all => {\n            const data = all.map(result => result.data.pokemon);\n            data.forEach(poke => poke.map(pokemon => pokeList.push(pokemon.pokemon)));\n        });\n        //Adds a id object to the pokemon object for getting images\n        pokeList.map(poke => {\n            let id = poke.url.match(regexPat)[1];\n            return (poke[\"id\"] = id);\n        });\n        //Slice pokeList to handle pagination\n        let cutPokemon = pokeList.slice(startNum, endNum);\n        this.setState({ newPokemonList: cutPokemon, sorted: true });\n    };\n\n    handlePagesClick = direction => {\n        this.setState({ sorted: false });\n        let currentUrlParams = new URLSearchParams(window.location.search);\n        let currentPageNum = currentUrlParams.get(\"page\");\n        currentPageNum = parseInt(currentPageNum);\n\n        if (!currentPageNum) {\n            currentPageNum = 1;\n        }\n        if (direction === \"next\") {\n            currentPageNum = currentPageNum + 1;\n        } else if (direction === \"prev\" && currentPageNum !== 1) {\n            currentPageNum = currentPageNum - 1;\n        } else {\n            currentPageNum = 1;\n        }\n        currentUrlParams.set(\"page\", currentPageNum);\n        this.props.history.push(`?page=${currentPageNum}`);\n        //If filterList array is empty fetch pokemon normally else fetch the typed pokemon with handlefilterlist\n        if (this.props.filterList.length < 1) {\n            this.fetchPokemon();\n        } else {\n            this.handleFilterList();\n        }\n    };\n\n    fetchPokemon = async () => {\n        let offsetNum = 0;\n        let regexPat = /\\/pokemon\\/(\\d+)\\//;\n        let currentUrlParams = new URLSearchParams(window.location.search);\n        let currentPageNum = currentUrlParams.get(\"page\");\n        if (currentPageNum > 26) {\n            this.props.history.push(\"/404\");\n        }\n        if (!currentPageNum) {\n            offsetNum = 0;\n        } else {\n            offsetNum = currentPageNum * 30 - 30;\n        }\n        this.setState({ sorted: false, pokemonList: [] });\n        //Fetches pokemon\n        const res = await axios.get(\n            `https://pokeapi.co/api/v2/pokemon/?limit=30&offset=${offsetNum}`\n        );\n        let pokemon = res.data.results;\n        pokemon.map(pokemon => {\n            let id = pokemon.url.match(regexPat)[1];\n            return (pokemon[\"id\"] = id);\n            //Adds id to pokemon object\n        });\n        this.setState({ pokemonList: pokemon, sorted: true });\n    };\n\n    render() {\n        const { newPokemonList, pokemonList, sorted, error } = this.state;\n\n        if (newPokemonList.length > 0) {\n            return (\n                <div>\n                    <CardList pokemonList={newPokemonList} />\n                </div>\n            );\n        }\n        return (\n            <div>\n                <CardList pokemonList={pokemonList} />\n            </div>\n        );\n    }\n}\nexport default withRouter(FilterResult);\n"]},"metadata":{},"sourceType":"module"}