{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/mp2/src/Components/Result/Result.js\";\nimport React, { useEffect, useState } from 'react';\nimport './result.css';\nimport { getAllPokemon, getPokemon } from \"../../Services/pokemon\";\nimport Card from \"../Card\";\n\nconst Result = () => {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextpageUrl, setNextPageurl] = useState('');\n  const [prevpageUrl, setPrevPageurl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const currentUrl = 'https://pokeapi.co/api/v2/pokemon';\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(currentUrl);\n      console.log(response); //response is the data get from api, it has previous and next to the other page\n\n      setNextPageurl(response.next);\n      setPrevPageurl(response.previous); //passing the results array\n\n      let pokemon = await loadingPokemon(response.results); //get data back from Api\n\n      setLoading(false);\n    } //recreate the function\n\n\n    fetchData();\n  }, []);\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextpageUrl);\n    await loadingPokemon(data.results);\n    setNextPageurl(data.next);\n    setPrevPageurl(data.previous);\n    setLoading(false);\n  };\n\n  const prev = async () => {\n    if (!prevpageUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevpageUrl);\n    await loadingPokemon(data.results);\n    setNextPageurl(data.next);\n    setPrevPageurl(data.previous);\n    setLoading(false);\n  };\n\n  const loadingPokemon = async data => {\n    //local pokemon array take in an array of promises return an array after all promises resolve\n    let _pokemonData = await Promise.all(data.map(async pokemon => {\n      let pokemonRecord = await getPokemon(pokemon.url);\n      return pokemonRecord;\n    }));\n\n    setPokemonData(_pokemonData);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Outer-Container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: prev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Prev\"), React.createElement(\"button\", {\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Next\")), React.createElement(\"div\", {\n    className: \"card-grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, pokemonData.map((pokemon, i) => {\n    return React.createElement(Card, {\n      key: i,\n      pokemon: pokemon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: prev,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Prev\"), React.createElement(\"button\", {\n    onClick: next,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Next\")));\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/yeqinghan/mp2/src/Components/Result/Result.js"],"names":["React","useEffect","useState","getAllPokemon","getPokemon","Card","Result","pokemonData","setPokemonData","nextpageUrl","setNextPageurl","prevpageUrl","setPrevPageurl","loading","setLoading","currentUrl","fetchData","response","console","log","next","previous","pokemon","loadingPokemon","results","data","prev","_pokemonData","Promise","all","map","pokemonRecord","url","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './result.css';\nimport {getAllPokemon, getPokemon} from \"../../Services/pokemon\";\nimport Card from \"../Card\";\n\nconst Result = () => {\n    const [pokemonData, setPokemonData] = useState([]);\n    const [nextpageUrl, setNextPageurl] = useState('');\n    const [prevpageUrl, setPrevPageurl] = useState('');\n    const [loading, setLoading] = useState(true);\n    const currentUrl = 'https://pokeapi.co/api/v2/pokemon'\n\n\n    useEffect(() =>{\n        async function fetchData(){\n            let response = await getAllPokemon(currentUrl);\n            console.log(response)\n            //response is the data get from api, it has previous and next to the other page\n            setNextPageurl(response.next);\n            setPrevPageurl(response.previous);\n            //passing the results array\n            let pokemon = await loadingPokemon(response.results);\n            //get data back from Api\n            setLoading(false);\n        }\n        //recreate the function\n        fetchData();\n\n    },[]);\n\n    const next = async () => {\n        setLoading(true);\n        let data = await getAllPokemon(nextpageUrl);\n        await loadingPokemon(data.results);\n        setNextPageurl(data.next);\n        setPrevPageurl(data.previous);\n        setLoading(false);\n    }\n\n    const prev = async () => {\n        if (!prevpageUrl) return;\n        setLoading(true);\n        let data = await getAllPokemon(prevpageUrl);\n        await loadingPokemon(data.results);\n        setNextPageurl(data.next);\n        setPrevPageurl(data.previous);\n        setLoading(false);\n    }\n\n\n    const loadingPokemon = async (data) => {\n        //local pokemon array take in an array of promises return an array after all promises resolve\n        let _pokemonData = await Promise.all(data.map(async pokemon => {\n            let pokemonRecord = await getPokemon(pokemon.url);\n            return pokemonRecord\n        }))\n\n        setPokemonData(_pokemonData)\n    }\n    return(\n\n\n        <div className=\"Outer-Container\">\n            <div className=\"btn\">\n                <button onClick={prev}>Prev</button>\n                <button onClick={next}>Next</button>\n            </div>\n            <div className=\"card-grid-container\">\n                {pokemonData.map((pokemon, i) => {\n                    return <Card key ={i} pokemon = {pokemon}/>\n                })\n                }\n            </div>\n            <div className=\"btn\">\n                <button onClick={prev}>Prev</button>\n                <button onClick={next}>Next</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}