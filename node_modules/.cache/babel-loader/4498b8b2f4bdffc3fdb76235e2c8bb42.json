{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/temp/mp2/src/Components/PokemonDetail/PokemonDetail.js\";\nimport React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport \"./pokemondetail.css\";\nimport Loading from \"../Loading/Loading\";\nimport { padNumber } from \"../../utils\";\nimport Link from \"react-router-dom/modules/Link\";\n\nclass PokemonDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.fetchPokeName();\n    };\n\n    this.componentDidUpdate = (prevState, prevProps) => {\n      if (this.props.location.pathname !== prevState.location.pathname) {\n        this.fetchPokeName();\n      }\n    };\n\n    this.fetchPokeName = async () => {\n      this.setState({\n        isLoaded: false,\n        error: false\n      });\n      const pokeName = this.props.match.params.name;\n      const lowerCasePokeName = pokeName.toLowerCase();\n\n      try {\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${lowerCasePokeName}/`);\n        this.setState({\n          pokeData: res.data,\n          isLoaded: true\n        }, this.handleWeightChange(res.data.weight));\n      } catch (error) {\n        this.setState({\n          errorCode: error.request.status,\n          error: true,\n          isLoaded: true\n        });\n      }\n    };\n\n    this.handleWeightChange = weight => {\n      //Fixes weight to better show weight\n      let weight1 = weight.toString();\n      let newWeight = weight1.slice(0, -1) + \".\" + weight1.slice(-1);\n      this.setState({\n        weight: newWeight\n      });\n    };\n\n    this.handleChange = (name, url, key) => {\n      if (name === \"ability\") {\n        this.setState({\n          abilityUrl: url,\n          abilityOn: !this.state.abilityOn,\n          key: key\n        });\n      } else {\n        this.setState({\n          key: \"\"\n        });\n      }\n    };\n\n    this.renderType = params => {\n      switch (params) {\n        default:\n          return \"\";\n\n        case \"grass\":\n          return \"grass\";\n\n        case \"poison\":\n          return \"poison\";\n\n        case \"fire\":\n          return \"fire\";\n\n        case \"water\":\n          return \"water\";\n\n        case \"fighting\":\n          return \"fighting\";\n\n        case \"flying\":\n          return \"flying\";\n\n        case \"dragon\":\n          return \"dragon\";\n\n        case \"normal\":\n          return \"normal\";\n\n        case \"fairy\":\n          return \"fairy\";\n\n        case \"electric\":\n          return \"electric\";\n\n        case \"ground\":\n          return \"ground\";\n\n        case \"ice\":\n          return \"ice\";\n\n        case \"dark\":\n          return \"dark\";\n\n        case \"steel\":\n          return \"steel\";\n\n        case \"bug\":\n          return \"bug\";\n\n        case \"psychic\":\n          return \"psychic\";\n\n        case \"rock\":\n          return \"rock\";\n\n        case \"ghost\":\n          return \"ghost\";\n      }\n    };\n\n    this.state = {\n      pokeData: [],\n      isLoaded: false,\n      abilityOn: false,\n      abilityUrl: \"\",\n      weight: \"\",\n      moveUrl: \"\",\n      key: \"\",\n      error: false,\n      errorCode: null\n    };\n  }\n\n  render() {\n    const {\n      pokeData,\n      isLoaded,\n      weight\n    } = this.state;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"loadingContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n\n    if (isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"pokeDetail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"topBoxWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/pokemon/${padNumber(pokeData.id - 1)}`,\n        className: \"button is-pulled-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"#\", padNumber(pokeData.id - 1)), React.createElement(Link, {\n        to: `/pokemon/${padNumber(pokeData.id + 1)}`,\n        className: \"button is-pulled-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"#\", padNumber(pokeData.id + 1)))), React.createElement(\"div\", {\n        className: \"pokePicture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pokeNameContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"pokeDetailName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, pokeData.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"#\", pokeData.id)), React.createElement(\"img\", {\n        src: pokeData.sprites.front_default,\n        alt: \"pokemon icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"weightContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"p-weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \" Weight \"), React.createElement(\"div\", {\n        className: \"weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \" \", weight, \" kg \"))), React.createElement(\"div\", {\n        className: \"typeContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, pokeData.types.map(({\n        type\n      }, i) => React.createElement(\"div\", {\n        className: this.renderType(type.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"s-Type\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, type.name)))), React.createElement(\"div\", {\n        className: \"shiny\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"p-Shiny\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Shiny Version \"), React.createElement(\"div\", {\n        className: \"shinySprite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: pokeData.sprites.front_shiny,\n        alt: \"shiny version\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"p-Stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \" Stats \"), React.createElement(\"div\", {\n        className: \"pokeContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, pokeData.stats.map(({\n        base_stat,\n        stat\n      }, i) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"statName\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \" \", stat.name, \" \"), React.createElement(\"div\", {\n        className: \"statContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: base_stat\n        },\n        className: \"statBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, base_stat))))))));\n    }\n  }\n\n}\n\nexport default PokemonDetail;","map":{"version":3,"sources":["/Users/yeqinghan/temp/mp2/src/Components/PokemonDetail/PokemonDetail.js"],"names":["React","Component","Fragment","axios","Loading","padNumber","Link","PokemonDetail","constructor","props","componentDidMount","fetchPokeName","componentDidUpdate","prevState","prevProps","location","pathname","setState","isLoaded","error","pokeName","match","params","name","lowerCasePokeName","toLowerCase","res","get","pokeData","data","handleWeightChange","weight","errorCode","request","status","weight1","toString","newWeight","slice","handleChange","url","key","abilityUrl","abilityOn","state","renderType","moveUrl","render","id","sprites","front_default","types","map","type","i","front_shiny","stats","base_stat","stat","width"],"mappings":"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","sourcesContent":["import React, { Component,Fragment } from \"react\";\nimport axios from \"axios\";\nimport \"./pokemondetail.css\"\nimport Loading from \"../Loading/Loading\";\nimport {padNumber} from \"../../utils\";\nimport Link from \"react-router-dom/modules/Link\";\n\n\nclass PokemonDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pokeData: [],\n            isLoaded: false,\n            abilityOn: false,\n            abilityUrl: \"\",\n            weight: \"\",\n            moveUrl: \"\",\n            key: \"\",\n            error: false,\n            errorCode: null\n        };\n    }\n    componentDidMount = () => {\n        this.fetchPokeName();\n    };\n\n    componentDidUpdate = (prevState, prevProps) => {\n        if (this.props.location.pathname !== prevState.location.pathname) {\n            this.fetchPokeName();\n        }\n    };\n    fetchPokeName = async () => {\n        this.setState({\n            isLoaded: false,\n            error: false\n        });\n        const pokeName = this.props.match.params.name;\n        const lowerCasePokeName = pokeName.toLowerCase();\n        try {\n            const res = await axios.get(\n                `https://pokeapi.co/api/v2/pokemon/${lowerCasePokeName}/`\n            );\n            this.setState(\n                {\n                    pokeData: res.data,\n                    isLoaded: true\n                },\n                this.handleWeightChange(res.data.weight)\n            );\n        } catch (error) {\n            this.setState({\n                errorCode: error.request.status,\n                error: true,\n                isLoaded: true\n            });\n        }\n    };\n    handleWeightChange = weight => {\n        //Fixes weight to better show weight\n        let weight1 = weight.toString();\n        let newWeight = weight1.slice(0, -1) + \".\" + weight1.slice(-1);\n        this.setState({ weight: newWeight });\n    };\n    handleChange = (name, url, key) => {\n        if (name === \"ability\") {\n            this.setState({\n                abilityUrl: url,\n                abilityOn: !this.state.abilityOn,\n                key: key\n            });\n        } else {\n            this.setState({ key: \"\" });\n        }\n    };\n    renderType = params => {\n        switch (params) {\n            default:\n                return \"\";\n            case \"grass\":\n                return \"grass\";\n            case \"poison\":\n                return \"poison\";\n            case \"fire\":\n                return \"fire\";\n            case \"water\":\n                return \"water\";\n            case \"fighting\":\n                return \"fighting\";\n            case \"flying\":\n                return \"flying\";\n            case \"dragon\":\n                return \"dragon\";\n            case \"normal\":\n                return \"normal\";\n            case \"fairy\":\n                return \"fairy\";\n            case \"electric\":\n                return \"electric\";\n            case \"ground\":\n                return \"ground\";\n            case \"ice\":\n                return \"ice\";\n            case \"dark\":\n                return \"dark\";\n            case \"steel\":\n                return \"steel\";\n            case \"bug\":\n                return \"bug\";\n            case \"psychic\":\n                return \"psychic\";\n            case \"rock\":\n                return \"rock\";\n            case \"ghost\":\n                return \"ghost\";\n        }\n    };\n\n    render() {\n        const { pokeData, isLoaded, weight} = this.state;\n\n        if (!isLoaded) {\n            return (\n                <div className=\"loadingContainer\">\n                    <Loading />\n                </div>\n            );\n        }\n        if (isLoaded) {\n            return (\n                <div className=\"pokeDetail\">\n                    <div className=\"topBoxWrapper\">\n                        <Fragment>\n                            <div>\n                                <Link\n                                    to={`/pokemon/${padNumber(pokeData.id - 1)}`}\n                                    className=\"button is-pulled-left\"\n                                >\n                                    #{padNumber(pokeData.id - 1)}\n                                </Link>\n                                <Link\n                                    to={`/pokemon/${padNumber(pokeData.id + 1)}`}\n                                    className=\"button is-pulled-right\"\n                                >\n                                    #{padNumber(pokeData.id + 1)}\n                                </Link>\n                            </div>\n                        </Fragment>\n                        <div className=\"pokePicture\">\n                            <div className=\"pokeNameContainer\">\n                                <h3 className=\"pokeDetailName\">{pokeData.name}</h3>\n                                <p>#{pokeData.id}</p>\n                            </div>\n                            <img src={pokeData.sprites.front_default} alt=\"pokemon icon\" />\n                        </div>\n                        <div className=\"weightContainer\">\n                            <p className=\"p-weight\"> Weight </p>\n                            <div className=\"weight\">\n                                <p> {weight} kg </p>\n                            </div>\n                        </div>\n                        <div className=\"typeContainer\">\n                            {pokeData.types.map(({ type }, i) => (\n                                <div className={this.renderType(type.name)}>\n                  <span className=\"s-Type\" key={i}>\n                    {type.name}\n                  </span>\n                                </div>\n                            ))}\n                        </div>\n                        <div className=\"shiny\">\n                            <p className=\"p-Shiny\">Shiny Version </p>\n                            <div className=\"shinySprite\">\n                                <img src={pokeData.sprites.front_shiny} alt=\"shiny version\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"stats\">\n                        <h3 className=\"p-Stats\"> Stats </h3>\n                        <div className=\"pokeContainer\">\n                            {pokeData.stats.map(({ base_stat, stat }, i) => (\n                                <div>\n                  <span className=\"statName\" key={i}>\n                    {\" \"}\n                      {stat.name}{\" \"}\n                  </span>\n                                    <div className=\"statContainer\">\n                                        <div style={{ width: base_stat }} className=\"statBar\">\n                                            <span>{base_stat}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\nexport default PokemonDetail;"]},"metadata":{},"sourceType":"module"}