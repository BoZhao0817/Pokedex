{"ast":null,"code":"var _jsxFileName = \"/Users/yeqinghan/mp22/src/Components/Card/Pokedex.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class Pokedex extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      pokeIndex: \"\",\n      imageUrl: \"\",\n      types: [],\n      description: \"\",\n      stats: {\n        hp: \"\",\n        attack: \"\",\n        defense: \"\",\n        speed: \"\",\n        specialAttack: \"\",\n        specialDefense: \"\"\n      },\n      height: \"\",\n      weight: \"\",\n      eggGroup: \"\",\n      abilities: \"\",\n      genderRatioMale: \"\",\n      genderRatioFemale: \"\",\n      evs: \"\",\n      hatchSteps: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pokemonIndex\n    } = this.props.match.params; //set up url for pokemon info\n\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`; //get pokeinfo\n\n    const pokemonResult = await axios.get(pokemonUrl);\n    const name = pokemonResult.data.name;\n    this.setState({\n      name\n    });\n    const imgUrl = pokemonResult.data.sprites.front_defaut;\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = '';\n    pokemonResult.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case \"hp\":\n          hp = stat['base_stat'];\n          break;\n\n        case \"defense\":\n          defense = stat['base_stat'];\n          break;\n\n        case \"attack\":\n          attack = stat['base_stat'];\n          break;\n\n        case \"speed\":\n          speed = stat['base_stat'];\n          break;\n\n        case \"special-attack\":\n          specialAttack = stat['base_stat'];\n          break;\n\n        case \"special-defense\":\n          specialDefense = stat['base_stat'];\n          break;\n      }\n    }); //convert decimal\n\n    const height = Math.round((pokemonResult.data.height * 0.32884 + 0.0001) * 100) / 100;\n    const weight = Math.round((pokemonResult.data.weight * 0.220462 + 0.0001) * 100) / 100; //map all the types\n\n    const types = pokemonResult.data.types.map(type => type.type.name);\n    const abilities = pokemonResult.data.abilities.map(ablity => {\n      return abilities.ability.name.toLowerCase().split(\"-\").map(str => str.charAt(0).toUpperCase() + str.substring(1).join(\" \"));\n    }); //filter only pass what we declare, different from map\n\n    const evs = pokemonResult.data.stats.filter(stat => {\n      if (stat.effort > 0) {\n        return true;\n      }\n\n      return false;\n    }).map(stat => {\n      return `${stat.effort} ${stat.stat.name}`.toLowerCase().split(\"-\").map(str => str.charAt(0).toUpperCase() + str.substring(1).join(\" \"));\n    }).join(\" , \"); //get pokemon description\n\n    await axios.get(pokemonSpeciesUrl).then(res => {\n      let description = \"\";\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name == 'en') {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n      const femaleRate = res.data['gender_rate'];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n      const catchRate = Math.round(100 / 255 * res.data['capture_rate']);\n      const eggGroup = res.data['egg_groups'].map(group => {\n        return group.name.toLowerCase().split(\"-\").map(str => str.charAt(0).toUpperCase() + str.substring(1).join(\" \"));\n      }).join(\", \");\n      const hashSteps = 255 * (res.data['hash_counter'] + 1);\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        catchRate,\n        eggGroup,\n        hashSteps\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.name);\n  }\n\n}","map":{"version":3,"sources":["/Users/yeqinghan/mp22/src/Components/Card/Pokedex.js"],"names":["React","Component","axios","Pokedex","state","name","pokeIndex","imageUrl","types","description","stats","hp","attack","defense","speed","specialAttack","specialDefense","height","weight","eggGroup","abilities","genderRatioMale","genderRatioFemale","evs","hatchSteps","componentDidMount","pokemonIndex","props","match","params","pokemonUrl","pokemonSpeciesUrl","pokemonResult","get","data","setState","imgUrl","sprites","front_defaut","map","stat","Math","round","type","ablity","ability","toLowerCase","split","str","charAt","toUpperCase","substring","join","filter","effort","then","res","flavor_text_entries","some","flavor","language","flavor_text","femaleRate","catchRate","group","hashSteps","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Pokedex extends Component{\n    state = {\n        name: \"\",\n        pokeIndex : \"\",\n        imageUrl:\"\",\n        types: [],\n        description: \"\",\n        stats:{\n            hp: \"\",\n            attack: \"\",\n            defense: \"\",\n            speed: \"\",\n            specialAttack: \"\",\n            specialDefense: \"\",\n        },\n        height: \"\",\n        weight: \"\",\n        eggGroup: \"\",\n        abilities: \"\",\n        genderRatioMale: \"\",\n        genderRatioFemale: \"\",\n        evs: \"\",\n        hatchSteps: \"\",\n    }\n\n    async componentDidMount(){\n        const {pokemonIndex} = this.props.match.params;\n        //set up url for pokemon info\n        const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`\n        const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`\n\n        //get pokeinfo\n        const pokemonResult = await axios.get(pokemonUrl);\n        const name = pokemonResult.data.name\n        this.setState({name})\n        const imgUrl = pokemonResult.data.sprites.front_defaut;\n\n        let {hp, attack, defense, speed, specialAttack, specialDefense} ='';\n\n        pokemonResult.data.stats.map(stat =>{\n            switch (stat.stat.name) {\n                case \"hp\":\n                    hp = stat['base_stat'];\n                    break;\n                case \"defense\":\n                    defense = stat['base_stat'];\n                    break;\n                case \"attack\":\n                    attack = stat['base_stat'];\n                    break;\n                case \"speed\":\n                    speed = stat['base_stat'];\n                    break;\n                case \"special-attack\":\n                    specialAttack = stat['base_stat'];\n                    break;\n                case \"special-defense\":\n                    specialDefense = stat['base_stat'];\n                    break;\n            }\n            });\n        //convert decimal\n        const height = Math.round((pokemonResult.data.height*0.32884+0.0001)*100)/100;\n        const weight =Math.round((pokemonResult.data.weight*0.220462+0.0001)*100)/100;\n        //map all the types\n        const types =pokemonResult.data.types.map(type => type.type.name);\n        const abilities = pokemonResult.data.abilities.map(ablity =>{\n            return abilities.ability.name.toLowerCase().split(\"-\").map( str => str.charAt(0).toUpperCase()+str.substring(1).join(\" \"))\n        })\n\n        //filter only pass what we declare, different from map\n        const evs = pokemonResult.data.stats.filter(stat =>{\n            if (stat.effort > 0){\n                return true\n            }\n            return false\n        }).map(stat => {\n            return `${stat.effort} ${stat.stat.name}`.toLowerCase().split(\"-\").map( str => str.charAt(0).toUpperCase()+str.substring(1).join(\" \"))\n        }).join(\" , \")\n\n\n        //get pokemon description\n        await axios.get(pokemonSpeciesUrl)\n            .then(res => {\n                let description = \"\"\n                res.data.flavor_text_entries.some(flavor => {\n                    if (flavor.language.name == 'en') {\n                        description = flavor.flavor_text;\n                        return;\n                    }\n                })\n                const femaleRate = res.data['gender_rate'];\n                const genderRatioFemale = 12.5*femaleRate;\n                const genderRatioMale = 12.5*(8-femaleRate)\n\n                const catchRate = Math.round((100/255)* res.data['capture_rate'])\n                const eggGroup = res.data['egg_groups'].map(group =>{\n                    return group.name.toLowerCase().split(\"-\").map( str => str.charAt(0).toUpperCase()+str.substring(1).join(\" \"))\n                }).join(\", \")\n\n                const hashSteps = 255*(res.data['hash_counter'] + 1);\n                this.setState({\n                    description,\n                    genderRatioFemale,\n                    genderRatioMale,\n                    catchRate,\n                    eggGroup,\n                    hashSteps\n                })\n            })\n    }\n\n\n    render() {\n        return(\n            <div>\n                {this.state.name}\n            </div>\n        )\n    }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}